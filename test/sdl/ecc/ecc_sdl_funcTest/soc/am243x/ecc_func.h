/*
 *   Copyright (c) Texas Instruments Incorporated 2023
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *    Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the
 *    distribution.
 *
 *    Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

 /**
 *  \file     ecc_test_main.h
 *
 *  \brief    This file contains ECC main test defines.
 *
 *  \details  ECC unit tests
 **/
/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_PSRAMECC0_PSRAM256X32E_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
 /** ------------------------------------------------------------------------------------
  * This structure holds the list of Ram Ids for memory subtypes SDL_PSRAMECC0_PSRAM256X32E_ECC_AGGR
  * -------------------------------------------------------------------------------------
  */
#include <sdl/include/am64x_am243x/sdlr_soc_ecc_aggr.h>

static SDL_ECC_MemSubType ECC_Test_SDL_PSRAMECC0_PSRAM256X32E_ECC_AGGR_subMemTypeList[SDL_PSRAMECC0_PSRAM256X32E_ECC_AGGR_NUM_RAMS] =
{
    SDL_PSRAMECC0_PSRAM256X32E_ECC_AGGR_PSRAM256X32E_PSRAM0_ECC_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_PSRAMECC0_PSRAM256X32E_ECC_AGGR_initConfig =
{
    .numRams = SDL_PSRAMECC0_PSRAM256X32E_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_PSRAMECC0_PSRAM256X32E_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_subMemTypeList[SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_NUM_RAMS] =
{
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_IDATA_SPRAM_BANK0_LO_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_IDATA_SPRAM_BANK0_HI_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_IDATA_SPRAM_BANK1_LO_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_IDATA_SPRAM_BANK1_HI_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_ITAG_SPRAM_RAM0_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_ITAG_SPRAM_RAM1_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_DDATA_SPRAM_BANK0_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_DDATA_SPRAM_BANK1_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_DDATA_SPRAM_BANK2_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_DDATA_SPRAM_BANK3_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_DDATA_SPRAM_BANK4_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_DDATA_SPRAM_BANK5_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_DDATA_SPRAM_BANK6_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_DDATA_SPRAM_BANK7_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_DTAG_SPRAM_BANK0_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_DTAG_SPRAM_BANK1_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_DTAG_SPRAM_BANK2_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_DTAG_SPRAM_BANK3_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_DDIRTY_SPRAM_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_TLB_SPRAM_BANK0_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_TLB_SPRAM_BANK1_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_TLB_SPRAM_BANK2_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_TLB_SPRAM_BANK3_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_L1D_TAGRAM_SPRAM_WAY0_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_L1D_TAGRAM_SPRAM_WAY1_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_L1D_TAGRAM_SPRAM_WAY2_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_CPU1_A53_DUAL_U_L1D_TAGRAM_SPRAM_WAY3_ECC_SVBUS_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_initConfig =
{
    .numRams = SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_subMemTypeList[SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_NUM_RAMS] =
{
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_IDATA_SPRAM_BANK0_LO_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_IDATA_SPRAM_BANK0_HI_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_IDATA_SPRAM_BANK1_LO_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_IDATA_SPRAM_BANK1_HI_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_ITAG_SPRAM_RAM0_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_ITAG_SPRAM_RAM1_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_DDATA_SPRAM_BANK0_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_DDATA_SPRAM_BANK1_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_DDATA_SPRAM_BANK2_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_DDATA_SPRAM_BANK3_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_DDATA_SPRAM_BANK4_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_DDATA_SPRAM_BANK5_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_DDATA_SPRAM_BANK6_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_DDATA_SPRAM_BANK7_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_DTAG_SPRAM_BANK0_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_DTAG_SPRAM_BANK1_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_DTAG_SPRAM_BANK2_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_DTAG_SPRAM_BANK3_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_DDIRTY_SPRAM_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_TLB_SPRAM_BANK0_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_TLB_SPRAM_BANK1_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_TLB_SPRAM_BANK2_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_TLB_SPRAM_BANK3_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_L1D_TAGRAM_SPRAM_WAY0_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_L1D_TAGRAM_SPRAM_WAY1_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_L1D_TAGRAM_SPRAM_WAY2_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_CPU0_A53_DUAL_U_L1D_TAGRAM_SPRAM_WAY3_ECC_SVBUS_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_initConfig =
{
    .numRams = SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_subMemTypeList[SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_NUM_RAMS] =
{
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY0_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY1_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY2_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY3_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY4_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY5_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY6_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY7_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY8_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY9_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY10_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY11_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY12_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY13_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY14_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_TAGRAM_SPRAM_WAY15_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_DATARAM_SPRAM_0_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_DATARAM_SPRAM_1_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_DATARAM_SPRAM_2_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_DATARAM_SPRAM_3_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_DATARAM_SPRAM_4_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_DATARAM_SPRAM_5_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_DATARAM_SPRAM_6_ECC_SVBUS_RAM_ID,
    SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_A53_DUAL_U_L2_DATARAM_SPRAM_7_ECC_SVBUS_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_initConfig =
{
    .numRams = SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_subMemTypeList[SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_NUM_RAMS] =
{
    SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_DRAM0_ECC_RAM_ID,
    SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_DRAM1_ECC_RAM_ID,
    SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_PR1_PDSP0_IRAM_ECC_RAM_ID,
    SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_PR1_PDSP1_IRAM_ECC_RAM_ID,
    SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_RAM_ECC_RAM_ID,
    SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_PR1_RTU0_PDSP_IRAM_ECC_RAM_ID,
    SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_PR1_RTU1_PDSP_IRAM_ECC_RAM_ID,
    SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_PR1_PDSP_TX0_IRAM_ECC_RAM_ID,
    SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_PR1_PDSP_TX1_IRAM_ECC_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_initConfig =
{
    .numRams = SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_subMemTypeList[SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_NUM_RAMS] =
{
    SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_DRAM0_ECC_RAM_ID,
    SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_DRAM1_ECC_RAM_ID,
    SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_PR1_PDSP0_IRAM_ECC_RAM_ID,
    SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_PR1_PDSP1_IRAM_ECC_RAM_ID,
    SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_RAM_ECC_RAM_ID,
    SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_PR1_RTU0_PDSP_IRAM_ECC_RAM_ID,
    SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_PR1_RTU1_PDSP_IRAM_ECC_RAM_ID,
    SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_PR1_PDSP_TX0_IRAM_ECC_RAM_ID,
    SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_ICSS_G_CORE_PR1_PDSP_TX1_IRAM_ECC_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_initConfig =
{
    .numRams = SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_DMASS0_DMSS_AM64_ECCAGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_DMASS0_DMSS_AM64_ECCAGGR_subMemTypeList[SDL_DMASS0_DMSS_AM64_ECCAGGR_NUM_RAMS] =
{
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_PKTDMA_CFG_CONFIG_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_PKTDMA_CFG_STATE_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_PKTDMA_TPCFIFO_F0_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_PKTDMA_TPCFIFO_F1_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_PKTDMA_RPCFIFO_F0_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_PKTDMA_RPCFIFO_F1_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_PKTDMA_RPCFIFO_WC_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_PKTDMA_STATS_STST0_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_PKTDMA_STATS_STSR0_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_PKTDMA_RINGOCC_CNTR_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_BCDMA_CFG_CONFIG_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_BCDMA_CFG_STATE_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_BCDMA_PCFIFO_DFIFO_F0_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_BCDMA_PCFIFO_DFIFO_F1_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_BCDMA_TPCFIFO_F0_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_BCDMA_TPCFIFO_F1_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_BCDMA_RPCFIFO_F0_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_BCDMA_RPCFIFO_F1_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_BCDMA_RPCFIFO_WC_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_BCDMA_STATS_STST0_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_BCDMA_STATS_STSR0_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_BCDMA_RINGOCC_CNTR_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_INTAGGR_STATREG_SR_SPRAM_184X128_SWW_SR_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_INTAGGR_COMMON_IM_TPRAM_2250X34_SWW_SR_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_IPCSS_RINGACC_STRAM_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_IPCSS_SEC_PROXY_BUF_STRAM_RAM_ID,
    SDL_DMASS0_DMSS_AM64_ECCAGGR_DMSS_AM64_IPCSS_SEC_PROXY_BUF_BUFRAM_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_DMASS0_DMSS_AM64_ECCAGGR_initConfig =
{
    .numRams = SDL_DMASS0_DMSS_AM64_ECCAGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_DMASS0_DMSS_AM64_ECCAGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_MSRAM_256K2_MSRAM32KX64E_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_MSRAM_256K2_MSRAM32KX64E_ECC_AGGR_subMemTypeList[SDL_MSRAM_256K2_MSRAM32KX64E_ECC_AGGR_NUM_RAMS] =
{
    SDL_MSRAM_256K2_MSRAM32KX64E_ECC_AGGR_MSRAM32KX64E_MSRAM0_ECC0_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_MSRAM_256K2_MSRAM32KX64E_ECC_AGGR_initConfig =
{
    .numRams = SDL_MSRAM_256K2_MSRAM32KX64E_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_MSRAM_256K2_MSRAM32KX64E_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_FSS0_FSS_UL_OSPI0_OSPI_WRAP_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_FSS0_FSS_UL_OSPI0_OSPI_WRAP_ECC_AGGR_subMemTypeList[SDL_FSS0_FSS_UL_OSPI0_OSPI_WRAP_ECC_AGGR_NUM_RAMS] =
{
    SDL_FSS0_FSS_UL_OSPI0_OSPI_WRAP_ECC_AGGR_OSPI_OSPI_WRAP_SRAM_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_FSS0_FSS_UL_OSPI0_OSPI_WRAP_ECC_AGGR_initConfig =
{
    .numRams = SDL_FSS0_FSS_UL_OSPI0_OSPI_WRAP_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_FSS0_FSS_UL_OSPI0_OSPI_WRAP_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR_subMemTypeList[SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR_NUM_RAMS - 12] =
{
    SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR_ALE_RAM_RAM_ID,
    SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR_P0_RX_FIFO_RAM_ID,
    SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR_P0_TX_FIFO_RAM_ID,
    SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR_P1_RX_FIFO_RAM_ID,
    SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR_P1_TX_FIFO_RAM_ID,
    SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR_P2_RX_FIFO_RAM_ID,
    SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR_P2_TX_FIFO_RAM_ID,
    SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR_EST_RAM_RAM_ID,
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_ADC0_ADC12_CORE_FIFO_RAM_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_InitConfig_t ECC_Test_SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR_initConfig =
   {
       .numRams = SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR_NUM_RAMS - 12,
       /**< Number of Rams ECC is enabled */
       .pMemSubTypeList = &(ECC_Test_SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR_subMemTypeList[0]),
       /**< Sub type list */
   };

static SDL_ECC_MemSubType ECC_Test_SDL_ADC0_ADC12_CORE_FIFO_RAM_ECC_AGGR_subMemTypeList[SDL_ADC0_ADC12_CORE_FIFO_RAM_ECC_AGGR_NUM_RAMS] =
{
    SDL_ADC0_ADC12_CORE_FIFO_RAM_ECC_AGGR_ADC12_CORE_FIFO_RAM_RAM0_TPRAM_ECC_RAM_ID,
    SDL_ADC0_ADC12_CORE_FIFO_RAM_ECC_AGGR_ADC12_CORE_FIFO_RAM_RAM1_TPRAM_ECC_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_ADC0_ADC12_CORE_FIFO_RAM_ECC_AGGR_initConfig =
{
    .numRams = SDL_ADC0_ADC12_CORE_FIFO_RAM_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_ADC0_ADC12_CORE_FIFO_RAM_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_RXMEM
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_RXMEM_subMemTypeList[SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_RXMEM_NUM_RAMS] =
{
    SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_RXMEM_EMMCSD4SS_SDHC_WRAP_RXMEM_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_RXMEM_initConfig =
{
    .numRams = SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_RXMEM_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_RXMEM_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_TXMEM
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_TXMEM_subMemTypeList[SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_TXMEM_NUM_RAMS] =
{
    SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_TXMEM_EMMCSD4SS_SDHC_WRAP_TXMEM_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_TXMEM_initConfig =
{
    .numRams = SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_TXMEM_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_TXMEM_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_GICSS0_GIC500SS_1_2_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_GICSS0_GIC500SS_1_2_ECC_AGGR_subMemTypeList[SDL_GICSS0_GIC500SS_1_2_ECC_AGGR_NUM_RAMS] =
{
    SDL_GICSS0_GIC500SS_1_2_ECC_AGGR_ICB_RAMECC_RAM_ID,
    SDL_GICSS0_GIC500SS_1_2_ECC_AGGR_ITE_RAMECC_RAM_ID,
    SDL_GICSS0_GIC500SS_1_2_ECC_AGGR_LPI_RAMECC_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_GICSS0_GIC500SS_1_2_ECC_AGGR_initConfig =
{
    .numRams = SDL_GICSS0_GIC500SS_1_2_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_GICSS0_GIC500SS_1_2_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_PCIE0_PCIE_G2X1_64_CORE_AXI_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_PCIE0_PCIE_G2X1_64_CORE_AXI_ECC_AGGR_subMemTypeList[SDL_PCIE0_PCIE_G2X1_64_CORE_AXI_ECC_AGGR_NUM_RAMS] =
{
    SDL_PCIE0_PCIE_G2X1_64_CORE_AXI_ECC_AGGR_PCIE_G2X1_64_CORE_DBN_WRAP_RAMS_AXIMFIFO_RAM_ID,
    SDL_PCIE0_PCIE_G2X1_64_CORE_AXI_ECC_AGGR_PCIE_G2X1_64_CORE_DBN_WRAP_RAMS_AXISFIFO_RAM_ID,
    SDL_PCIE0_PCIE_G2X1_64_CORE_AXI_ECC_AGGR_PCIE_G2X1_64_CORE_DBN_WRAP_RAMS_DIBRAM_RAM_ID,
    SDL_PCIE0_PCIE_G2X1_64_CORE_AXI_ECC_AGGR_PCIE_G2X1_64_CORE_AXI2VBUSM_MST_KSBUS_AXI2VBUSM_R_RDATA_BUFFER_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_PCIE0_PCIE_G2X1_64_CORE_AXI_ECC_AGGR_initConfig =
{
    .numRams = SDL_PCIE0_PCIE_G2X1_64_CORE_AXI_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_PCIE0_PCIE_G2X1_64_CORE_AXI_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_PCIE0_PCIE_G2X1_64_CORE_CORE_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_PCIE0_PCIE_G2X1_64_CORE_CORE_ECC_AGGR_subMemTypeList[SDL_PCIE0_PCIE_G2X1_64_CORE_CORE_ECC_AGGR_NUM_RAMS] =
{
    SDL_PCIE0_PCIE_G2X1_64_CORE_CORE_ECC_AGGR_PCIE_G2X1_64_CORE_DBN_WRAP_RAMS_PNPFIFO_RAM_ID,
    SDL_PCIE0_PCIE_G2X1_64_CORE_CORE_ECC_AGGR_PCIE_G2X1_64_CORE_DBN_WRAP_RAMS_RXCPLFIFO_RAM_ID,
    SDL_PCIE0_PCIE_G2X1_64_CORE_CORE_ECC_AGGR_PCIE_G2X1_64_CORE_DBN_WRAP_RAMS_RPLYBUF_RAM_ID,
    SDL_PCIE0_PCIE_G2X1_64_CORE_CORE_ECC_AGGR_PCIE_G2X1_64_CORE_DBN_WRAP_RAMS_AXISRODR_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_PCIE0_PCIE_G2X1_64_CORE_CORE_ECC_AGGR_initConfig =
{
    .numRams = SDL_PCIE0_PCIE_G2X1_64_CORE_CORE_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_PCIE0_PCIE_G2X1_64_CORE_CORE_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_VTM0_K3VTM_N16FFC_ECCAGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_VTM0_K3VTM_N16FFC_ECCAGGR_subMemTypeList[SDL_VTM0_K3VTM_N16FFC_ECCAGGR_NUM_RAMS] =
{
    SDL_VTM0_K3VTM_N16FFC_ECCAGGR_K3VTM_N16FFC_ECCAGGR_EDC_CTRL_RAM_ID,
    SDL_VTM0_K3VTM_N16FFC_ECCAGGR_K3VTM_N16FFC_MMR_EDC_CTRL_0_RAM_ID,
    SDL_VTM0_K3VTM_N16FFC_ECCAGGR_K3VTM_N16FFC_CFG_CBASS_VBUSP_P2P_BRIDGE_EDC_CTRL_0_RAM_ID,
    SDL_VTM0_K3VTM_N16FFC_ECCAGGR_K3VTM_N16FFC_CFG_CBASS_CFG_SCR_SCR_EDC_CTRL_0_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_VTM0_K3VTM_N16FFC_ECCAGGR_initConfig =
{
    .numRams = SDL_VTM0_K3VTM_N16FFC_ECCAGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_VTM0_K3VTM_N16FFC_ECCAGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_subMemTypeList[SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_NUM_RAMS] =
{
    SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_SA2_UL_PKTRAM0_ECC_RAM_ID,
    SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_SA2_UL_PKTRAM1_ECC_RAM_ID,
    SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_SA2_UL_PKA_PROG_RAM_ECC_RAM_ID,
    SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_SA2_UL_ENCR_CTXRAM_BANK01_ECC_RAM_ID,
    SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_SA2_UL_ENCR_CTXRAM_BANK23_ECC_RAM_ID,
    SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_SA2_UL_ENCR_CTXRAM_BANK4_ECC_RAM_ID,
    SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_SA2_UL_AUTH_CTXRAM_BANK01_ECC_RAM_ID,
    SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_SA2_UL_AUTH_CTXRAM_BANK23_ECC_RAM_ID,
    SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_SA2_UL_AUTH_CTXRAM_BANK45_ECC_RAM_ID,
    SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_SA2_UL_AUTH_CTXRAM_BANK67_ECC_RAM_ID,
    SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_SA2_UL_AUTH_CTXRAM_BANK89_ECC_RAM_ID,
    SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_SA2_UL_AUTH_CTXRAM_BANK10_ECC_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_initConfig =
{
    .numRams = SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_PDMA1_PDMA_AM64_MAIN1_ECCAGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_PDMA1_PDMA_AM64_MAIN1_ECCAGGR_subMemTypeList[SDL_PDMA1_PDMA_AM64_MAIN1_ECCAGGR_NUM_RAMS] =
{
    SDL_PDMA1_PDMA_AM64_MAIN1_ECCAGGR_PDMA_AM64_MAIN1_PDMA_CORE_TF0_F0_TPRAM_60X128_SBW_SR_RAM_ID,
    SDL_PDMA1_PDMA_AM64_MAIN1_ECCAGGR_PDMA_AM64_MAIN1_PDMA_CORE_TF0_F1_TPRAM_60X128_SBW_SR_RAM_ID,
    SDL_PDMA1_PDMA_AM64_MAIN1_ECCAGGR_PDMA_AM64_MAIN1_PDMA_CORE_RF0_F0_TPRAM_68X144_SBW_SR_RAM_ID,
    SDL_PDMA1_PDMA_AM64_MAIN1_ECCAGGR_PDMA_AM64_MAIN1_PDMA_CORE_RF0_F1_TPRAM_68X144_SBW_SR_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_PDMA1_PDMA_AM64_MAIN1_ECCAGGR_initConfig =
{
    .numRams = SDL_PDMA1_PDMA_AM64_MAIN1_ECCAGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_PDMA1_PDMA_AM64_MAIN1_ECCAGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_USB0_USB3P0SS64_16FFC_USB3P0SS64_CORE_A_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_USB0_USB3P0SS64_16FFC_USB3P0SS64_CORE_A_ECC_AGGR_subMemTypeList[SDL_USB0_USB3P0SS64_16FFC_USB3P0SS64_CORE_A_ECC_AGGR_NUM_RAMS] =
{
    SDL_USB0_USB3P0SS64_16FFC_USB3P0SS64_CORE_A_ECC_AGGR_USB3P0SS64_16FFC_USB3P0SS64_CORE_USB3P0_KSBUS_AXI2VBUSM_KSBUS_AXI2VBUSM_R_RDATA_BUFFER_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_USB0_USB3P0SS64_16FFC_USB3P0SS64_CORE_A_ECC_AGGR_initConfig =
{
    .numRams = SDL_USB0_USB3P0SS64_16FFC_USB3P0SS64_CORE_A_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_USB0_USB3P0SS64_16FFC_USB3P0SS64_CORE_A_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_DMSC0_DMSC_LITE
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_DMSC0_DMSC_LITE_subMemTypeList[SDL_DMSC0_DMSC_LITE_NUM_RAMS] =
{
    SDL_DMSC0_DMSC_LITE_ISRAM1_RAMECC_RAM_ID,
    SDL_DMSC0_DMSC_LITE_ISRAM0_RAMECC_RAM_ID,
    SDL_DMSC0_DMSC_LITE_IM_RAMECC_RAM_ID,
    SDL_DMSC0_DMSC_LITE_SR_RAMECC_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_DMSC0_DMSC_LITE_initConfig =
{
    .numRams = SDL_DMSC0_DMSC_LITE_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_DMSC0_DMSC_LITE_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_MSRAM_256K1_MSRAM32KX64E_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_MSRAM_256K1_MSRAM32KX64E_ECC_AGGR_subMemTypeList[SDL_MSRAM_256K1_MSRAM32KX64E_ECC_AGGR_NUM_RAMS] =
{
    SDL_MSRAM_256K1_MSRAM32KX64E_ECC_AGGR_MSRAM32KX64E_MSRAM0_ECC0_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_MSRAM_256K1_MSRAM32KX64E_ECC_AGGR_initConfig =
{
    .numRams = SDL_MSRAM_256K1_MSRAM32KX64E_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_MSRAM_256K1_MSRAM32KX64E_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_MSRAM_256K0_MSRAM32KX64E_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_MSRAM_256K0_MSRAM32KX64E_ECC_AGGR_subMemTypeList[SDL_MSRAM_256K0_MSRAM32KX64E_ECC_AGGR_NUM_RAMS] =
{
    SDL_MSRAM_256K0_MSRAM32KX64E_ECC_AGGR_MSRAM32KX64E_MSRAM0_ECC0_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_MSRAM_256K0_MSRAM32KX64E_ECC_AGGR_initConfig =
{
    .numRams = SDL_MSRAM_256K0_MSRAM32KX64E_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_MSRAM_256K0_MSRAM32KX64E_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_MSRAM_256K3_MSRAM32KX64E_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_MSRAM_256K3_MSRAM32KX64E_ECC_AGGR_subMemTypeList[SDL_MSRAM_256K3_MSRAM32KX64E_ECC_AGGR_NUM_RAMS] =
{
    SDL_MSRAM_256K3_MSRAM32KX64E_ECC_AGGR_MSRAM32KX64E_MSRAM0_ECC0_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_MSRAM_256K3_MSRAM32KX64E_ECC_AGGR_initConfig =
{
    .numRams = SDL_MSRAM_256K3_MSRAM32KX64E_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_MSRAM_256K3_MSRAM32KX64E_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_MSRAM_256K5_MSRAM32KX64E_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_MSRAM_256K5_MSRAM32KX64E_ECC_AGGR_subMemTypeList[SDL_MSRAM_256K5_MSRAM32KX64E_ECC_AGGR_NUM_RAMS] =
{
    SDL_MSRAM_256K5_MSRAM32KX64E_ECC_AGGR_MSRAM32KX64E_MSRAM0_ECC0_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_MSRAM_256K5_MSRAM32KX64E_ECC_AGGR_initConfig =
{
    .numRams = SDL_MSRAM_256K5_MSRAM32KX64E_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_MSRAM_256K5_MSRAM32KX64E_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_MSRAM_256K4_MSRAM32KX64E_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_MSRAM_256K4_MSRAM32KX64E_ECC_AGGR_subMemTypeList[SDL_MSRAM_256K4_MSRAM32KX64E_ECC_AGGR_NUM_RAMS] =
{
    SDL_MSRAM_256K4_MSRAM32KX64E_ECC_AGGR_MSRAM32KX64E_MSRAM0_ECC0_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_MSRAM_256K4_MSRAM32KX64E_ECC_AGGR_initConfig =
{
    .numRams = SDL_MSRAM_256K4_MSRAM32KX64E_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_MSRAM_256K4_MSRAM32KX64E_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_MSRAM_256K7_MSRAM32KX64E_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_MSRAM_256K7_MSRAM32KX64E_ECC_AGGR_subMemTypeList[SDL_MSRAM_256K7_MSRAM32KX64E_ECC_AGGR_NUM_RAMS] =
{
    SDL_MSRAM_256K7_MSRAM32KX64E_ECC_AGGR_MSRAM32KX64E_MSRAM0_ECC0_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_MSRAM_256K7_MSRAM32KX64E_ECC_AGGR_initConfig =
{
    .numRams = SDL_MSRAM_256K7_MSRAM32KX64E_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_MSRAM_256K7_MSRAM32KX64E_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_MSRAM_256K6_MSRAM32KX64E_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_MSRAM_256K6_MSRAM32KX64E_ECC_AGGR_subMemTypeList[SDL_MSRAM_256K6_MSRAM32KX64E_ECC_AGGR_NUM_RAMS] =
{
    SDL_MSRAM_256K6_MSRAM32KX64E_ECC_AGGR_MSRAM32KX64E_MSRAM0_ECC0_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_MSRAM_256K6_MSRAM32KX64E_ECC_AGGR_initConfig =
{
    .numRams = SDL_MSRAM_256K6_MSRAM32KX64E_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_MSRAM_256K6_MSRAM32KX64E_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_ECC_AGGR1
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_ECC_AGGR1_subMemTypeList[SDL_ECC_AGGR1_NUM_RAMS] =
{
    SDL_ECC_AGGR1_IMAILBOX8_MAIN_0__RAMECC_RAM_ID,
    SDL_ECC_AGGR1_IAM64_MAIN_INFRA_CBASS_CBASS_MAIN_0_AM64_MAIN_INFRA_CBASS_CBASS_IK3VTM_N16FFC_MAIN_0_VBUSP_P2P_BRIDGE_IK3VTM_N16FFC_MAIN_0_VBUSP_BRIDGE_BUSECC_RAM_ID,
    SDL_ECC_AGGR1_IAM64_MAIN_INFRA_CBASS_CBASS_MAIN_0_AM64_MAIN_INFRA_CBASS_CBASS_MAIN_SYSCLK0_4_CLK_EDC_CTRL_CBASS_INT_MAIN_SYSCLK0_4_BUSECC_RAM_ID,
    SDL_ECC_AGGR1_IAM64_MAIN_FW_CBASS_MAIN_0_AM64_MAIN_FW_CBASS_IAM64_MCU_CBASS_CBASS_MCU_0_CBASS_DMSC_SLV_P2P_BRIDGE_IAM64_MCU_CBASS_CBASS_MCU_0_CBASS_DMSC_SLV_BRIDGE_DST_BUSECC_RAM_ID,
    SDL_ECC_AGGR1_IAM64_MAIN_FW_CBASS_MAIN_0_AM64_MAIN_FW_CBASS_IAM64_MCU_CBASS_CBASS_MCU_0_CBASS_DMSC_SLV_P2P_BRIDGE_IAM64_MCU_CBASS_CBASS_MCU_0_CBASS_DMSC_SLV_BRIDGE_SRC_BUSECC_RAM_ID,
    SDL_ECC_AGGR1_IAM64_MAIN_FW_CBASS_MAIN_0_AM64_MAIN_FW_CBASS_MAIN_SYSCLK0_4_CLK_EDC_CTRL_CBASS_INT_MAIN_SYSCLK0_4_BUSECC_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_ECC_AGGR1_initConfig =
{
    .numRams = SDL_ECC_AGGR1_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_ECC_AGGR1_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_MCAN1_MCANSS_MSGMEM_WRAP_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_MCAN1_MCANSS_MSGMEM_WRAP_ECC_AGGR_subMemTypeList[SDL_MCAN1_MCANSS_MSGMEM_WRAP_ECC_AGGR_NUM_RAMS] =
{
    SDL_MCAN1_MCANSS_MSGMEM_WRAP_ECC_AGGR_MCANSS_MSGMEM_WRAP_MSGMEM_ECC_RAM_ID,
    SDL_MCAN1_MCANSS_MSGMEM_WRAP_ECC_AGGR_CTRL_EDC_VBUSS_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_MCAN1_MCANSS_MSGMEM_WRAP_ECC_AGGR_initConfig =
{
    .numRams = SDL_MCAN1_MCANSS_MSGMEM_WRAP_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_MCAN1_MCANSS_MSGMEM_WRAP_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_MCAN0_MCANSS_MSGMEM_WRAP_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_MCAN0_MCANSS_MSGMEM_WRAP_ECC_AGGR_subMemTypeList[SDL_MCAN0_MCANSS_MSGMEM_WRAP_ECC_AGGR_NUM_RAMS] =
{
    SDL_MCAN0_MCANSS_MSGMEM_WRAP_ECC_AGGR_MCANSS_MSGMEM_WRAP_MSGMEM_ECC_RAM_ID,
    SDL_MCAN0_MCANSS_MSGMEM_WRAP_ECC_AGGR_CTRL_EDC_VBUSS_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_MCAN0_MCANSS_MSGMEM_WRAP_ECC_AGGR_initConfig =
{
    .numRams = SDL_MCAN0_MCANSS_MSGMEM_WRAP_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_MCAN0_MCANSS_MSGMEM_WRAP_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_TXMEM
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_TXMEM_subMemTypeList[SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_TXMEM_NUM_RAMS] =
{
    SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_TXMEM_EMMC8SS_16FFC_SDHC_WRAP_TXMEM_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_TXMEM_initConfig =
{
    .numRams = SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_TXMEM_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_TXMEM_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_RXMEM
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_RXMEM_subMemTypeList[SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_RXMEM_NUM_RAMS] =
{
    SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_RXMEM_EMMC8SS_16FFC_SDHC_WRAP_RXMEM_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_RXMEM_initConfig =
{
    .numRams = SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_RXMEM_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_RXMEM_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_MCU_M4FSS0_BLAZAR_ECC
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_MCU_M4FSS0_BLAZAR_ECC_subMemTypeList[SDL_MCU_M4FSS0_BLAZAR_ECC_NUM_RAMS] =
{
    SDL_MCU_M4FSS0_BLAZAR_ECC_BLAZAR_IIRAM_ECC_RAM_ID,
    SDL_MCU_M4FSS0_BLAZAR_ECC_BLAZAR_IDRAM_ECC_RAM_ID,
    SDL_MCU_M4FSS0_BLAZAR_ECC_BLAZAR_IIRAM_EDC_CTRL_0_RAM_ID,
    SDL_MCU_M4FSS0_BLAZAR_ECC_BLAZAR_IDRAM_EDC_CTRL_0_RAM_ID,
    SDL_MCU_M4FSS0_BLAZAR_ECC_BLAZAR_RAT_EDC_CTRL_0_RAM_ID,
    SDL_MCU_M4FSS0_BLAZAR_ECC_BLAZAR_CBASS_VBUSP_S_P2P_BRIDGE_VBUSP_S_BRIDGE_BUSECC_RAM_ID,
    SDL_MCU_M4FSS0_BLAZAR_ECC_BLAZAR_CBASS_IECC_S_P2P_BRIDGE_IECC_S_BRIDGE_BUSECC_RAM_ID,
    SDL_MCU_M4FSS0_BLAZAR_ECC_BLAZAR_CBASS_BLAZAR_SCR_SCR_BLAZAR_CBASS_BLAZAR_SCR_SCR_EDC_CTRL_BUSECC_RAM_ID,
    SDL_MCU_M4FSS0_BLAZAR_ECC_BLAZAR_CBASS_VBUS_CLK_EDC_CTRL_CBASS_INT_VBUS_BUSECC_RAM_ID,
    SDL_MCU_M4FSS0_BLAZAR_ECC_BLAZAR_SYS_SCR_VBUS_CLK_EDC_CTRL_0_RAM_ID,
    SDL_MCU_M4FSS0_BLAZAR_ECC_BLAZAR_IA2V_I_EDC_CTRL_0_RAM_ID,
    SDL_MCU_M4FSS0_BLAZAR_ECC_BLAZAR_IA2V_D_EDC_CTRL_0_RAM_ID,
    SDL_MCU_M4FSS0_BLAZAR_ECC_BLAZAR_SYS_GASKET_EDC_CTRL_0_RAM_ID,
    SDL_MCU_M4FSS0_BLAZAR_ECC_BLAZAR_ECC_EDC_CTRL_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_MCU_M4FSS0_BLAZAR_ECC_initConfig =
{
    .numRams = SDL_MCU_M4FSS0_BLAZAR_ECC_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_MCU_M4FSS0_BLAZAR_ECC_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_subMemTypeList[SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_NUM_RAMS] =
{
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_ITAG_RAM0_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_ITAG_RAM1_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_ITAG_RAM2_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_ITAG_RAM3_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_IDATA_BANK0_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_IDATA_BANK1_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_IDATA_BANK2_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_IDATA_BANK3_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DTAG_RAM0_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DTAG_RAM1_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DTAG_RAM2_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DTAG_RAM3_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDIRTY_RAM_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM0_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM1_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM2_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM3_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM4_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM5_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM6_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM7_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_PULSAR_LITE_ATCM0_BANK0_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_PULSAR_LITE_ATCM0_BANK1_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_PULSAR_LITE_B0TCM0_BANK0_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_PULSAR_LITE_B0TCM0_BANK1_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_PULSAR_LITE_B1TCM0_BANK0_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_PULSAR_LITE_B1TCM0_BANK1_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_KS_VIM_RAMECC_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_AXI2VBUSM_MEM_MST_RAMECC_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_initConfig =
{
    .numRams = SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_subMemTypeList[SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_NUM_RAMS] =
{
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_ITAG_RAM0_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_ITAG_RAM1_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_ITAG_RAM2_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_ITAG_RAM3_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_IDATA_BANK0_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_IDATA_BANK1_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_IDATA_BANK2_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_IDATA_BANK3_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DTAG_RAM0_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DTAG_RAM1_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DTAG_RAM2_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DTAG_RAM3_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDIRTY_RAM_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM0_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM1_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM2_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM3_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM4_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM5_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM6_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM7_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_PULSAR_LITE_ATCM1_BANK0_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_PULSAR_LITE_ATCM1_BANK1_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_PULSAR_LITE_B0TCM1_BANK0_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_PULSAR_LITE_B0TCM1_BANK1_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_PULSAR_LITE_B1TCM1_BANK0_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_PULSAR_LITE_B1TCM1_BANK1_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_KS_VIM_RAMECC_RAM_ID,
    SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_AXI2VBUSM_MEM_MST_RAMECC_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_initConfig =
{
    .numRams = SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_subMemTypeList[SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_NUM_RAMS] =
{
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_ITAG_RAM0_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_ITAG_RAM1_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_ITAG_RAM2_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_ITAG_RAM3_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_IDATA_BANK0_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_IDATA_BANK1_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_IDATA_BANK2_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_IDATA_BANK3_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DTAG_RAM0_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DTAG_RAM1_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DTAG_RAM2_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DTAG_RAM3_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDIRTY_RAM_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM0_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM1_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM2_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM3_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM4_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM5_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM6_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_DDATA_RAM7_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_PULSAR_LITE_ATCM0_BANK0_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_PULSAR_LITE_ATCM0_BANK1_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_PULSAR_LITE_B0TCM0_BANK0_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_PULSAR_LITE_B0TCM0_BANK1_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_PULSAR_LITE_B1TCM0_BANK0_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_PULSAR_LITE_B1TCM0_BANK1_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_KS_VIM_RAMECC_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_CPU0_AXI2VBUSM_MEM_MST_RAMECC_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_initConfig =
{
    .numRams = SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_subMemTypeList[SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_NUM_RAMS] =
{
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_ITAG_RAM0_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_ITAG_RAM1_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_ITAG_RAM2_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_ITAG_RAM3_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_IDATA_BANK0_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_IDATA_BANK1_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_IDATA_BANK2_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_IDATA_BANK3_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DTAG_RAM0_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DTAG_RAM1_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DTAG_RAM2_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DTAG_RAM3_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDIRTY_RAM_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM0_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM1_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM2_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM3_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM4_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM5_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM6_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_DDATA_RAM7_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_PULSAR_LITE_ATCM1_BANK0_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_PULSAR_LITE_ATCM1_BANK1_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_PULSAR_LITE_B0TCM1_BANK0_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_PULSAR_LITE_B0TCM1_BANK1_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_PULSAR_LITE_B1TCM1_BANK0_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_PULSAR_LITE_B1TCM1_BANK1_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_KS_VIM_RAMECC_RAM_ID,
    SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_CPU1_AXI2VBUSM_MEM_MST_RAMECC_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_initConfig =
{
    .numRams = SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_ECC_AGGR0
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_ECC_AGGR0_subMemTypeList[SDL_ECC_AGGR0_NUM_RAMS] =
{
    SDL_ECC_AGGR0_ITIMER_MGR1024_MAIN_0__TIMER_FSM_RAMECC_RAM_ID,
    SDL_ECC_AGGR0_ITIMER_MGR1024_MAIN_0__REPROG_FSM_RAMECC_RAM_ID,
    SDL_ECC_AGGR0_ITIMER_MGR1024_MAIN_0__EFIFO_RAMECC_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_ECC_AGGR0_initConfig =
{
    .numRams = SDL_ECC_AGGR0_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_ECC_AGGR0_subMemTypeList[0]),
    /**< Sub type list */
};

/** ------------------------------------------------------------------------------------
 * This structure holds the list of Ram Ids for memory subtypes SDL_PDMA0_PDMA_AM64_MAIN0_ECCAGGR
 * -------------------------------------------------------------------------------------
 */
static SDL_ECC_MemSubType ECC_Test_SDL_PDMA0_PDMA_AM64_MAIN0_ECCAGGR_subMemTypeList[SDL_PDMA0_PDMA_AM64_MAIN0_ECCAGGR_NUM_RAMS] =
{
    SDL_PDMA0_PDMA_AM64_MAIN0_ECCAGGR_PDMA_AM64_MAIN0_PDMA_CORE_TF0_F0_TPRAM_72X128_SBW_SR_RAM_ID,
    SDL_PDMA0_PDMA_AM64_MAIN0_ECCAGGR_PDMA_AM64_MAIN0_PDMA_CORE_TF0_F1_TPRAM_72X128_SBW_SR_RAM_ID,
    SDL_PDMA0_PDMA_AM64_MAIN0_ECCAGGR_PDMA_AM64_MAIN0_PDMA_CORE_RF0_F0_TPRAM_72X144_SBW_SR_RAM_ID,
    SDL_PDMA0_PDMA_AM64_MAIN0_ECCAGGR_PDMA_AM64_MAIN0_PDMA_CORE_RF0_F1_TPRAM_72X144_SBW_SR_RAM_ID,
};

static SDL_ECC_InitConfig_t ECC_Test_SDL_PDMA0_PDMA_AM64_MAIN0_ECCAGGR_initConfig =
{
    .numRams = SDL_PDMA0_PDMA_AM64_MAIN0_ECCAGGR_NUM_RAMS,
    /**< Number of Rams ECC is enabled */
    .pMemSubTypeList = &(ECC_Test_SDL_PDMA0_PDMA_AM64_MAIN0_ECCAGGR_subMemTypeList[0]),
    /**< Sub type list */
};

typedef struct
{
   SDL_ECC_InitConfig_t *initConfig;
   char *aggrName;
} SDL_Test_EccConfig;
#if defined (SOC_AM64X)
static SDL_Test_EccConfig ECC_Test_config[SDL_ECC_MEMTYPE_MAX] =
{
  //0
  {
      &ECC_Test_SDL_PSRAMECC0_PSRAM256X32E_ECC_AGGR_initConfig,
      "SDL_PSRAMECC0_PSRAM256X32E_ECC_AGGR"
  },
  //1
  {
      &ECC_Test_SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_RXMEM_initConfig,
  "SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_RXMEM"
  },

  //3
  {
      &ECC_Test_SDL_ADC0_ADC12_CORE_FIFO_RAM_ECC_AGGR_initConfig,
  "SDL_ADC0_ADC12_CORE_FIFO_RAM_ECC_AGGR"
  },
  //3
  {
      &ECC_Test_SDL_ECC_AGGR1_initConfig,
      "SDL_ECC_AGGR1"
  },
  //4
  {
      &ECC_Test_SDL_ECC_AGGR0_initConfig,
      "SDL_ECC_AGGR0"
  },
  //5
  {
      &ECC_Test_SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_initConfig,
  "SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR"
  },
  //6
  {
      &ECC_Test_SDL_MCAN0_MCANSS_MSGMEM_WRAP_ECC_AGGR_initConfig,
      "SDL_MCAN0_MCANSS_MSGMEM_WRAP_ECC_AGGR"
  },
  //7
  {
      &ECC_Test_SDL_DMASS0_DMSS_AM64_ECCAGGR_initConfig,
  "SDL_DMASS0_DMSS_AM64_ECCAGGR"
  },
  //8
  {
      &ECC_Test_SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_TXMEM_initConfig,
  "SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_TXMEM"
  },
  //9
  {
      &ECC_Test_SDL_MCAN1_MCANSS_MSGMEM_WRAP_ECC_AGGR_initConfig,
      "SDL_MCAN1_MCANSS_MSGMEM_WRAP_ECC_AGGR"
  },
  //10
  {
      &ECC_Test_SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_initConfig,
  "SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR"
  },
  //11
  {
      &ECC_Test_SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_initConfig,
  "SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR"
  },
  //12
  {
      &ECC_Test_SDL_MSRAM_256K2_MSRAM32KX64E_ECC_AGGR_initConfig,
  "SDL_MSRAM_256K2_MSRAM32KX64E_ECC_AGGR"
  },
  //13
  {
      &ECC_Test_SDL_FSS0_FSS_UL_OSPI0_OSPI_WRAP_ECC_AGGR_initConfig,
  "SDL_FSS0_FSS_UL_OSPI0_OSPI_WRAP_ECC_AGGR"
  },
  //14
  {
      &ECC_Test_SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR_initConfig,
  "ECC_Test_SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR"
  },
  //15
  {
      &ECC_Test_SDL_GICSS0_GIC500SS_1_2_ECC_AGGR_initConfig,
  "SDL_GICSS0_GIC500SS_1_2_ECC_AGGR"
  },
  //16
  {
      &ECC_Test_SDL_PCIE0_PCIE_G2X1_64_CORE_AXI_ECC_AGGR_initConfig,
  "SDL_PCIE0_PCIE_G2X1_64_CORE_AXI_ECC_AGGR"
  },
  //17
  {
      &ECC_Test_SDL_PCIE0_PCIE_G2X1_64_CORE_CORE_ECC_AGGR_initConfig,
  "SDL_PCIE0_PCIE_G2X1_64_CORE_CORE_ECC_AGGR"
  },
  //18
  {
      &ECC_Test_SDL_USB0_USB3P0SS64_16FFC_USB3P0SS64_CORE_A_ECC_AGGR_initConfig,
  "SDL_USB0_USB3P0SS64_16FFC_USB3P0SS64_CORE_A_ECC_AGGR"
  },
  //19
  {
      &ECC_Test_SDL_PDMA1_PDMA_AM64_MAIN1_ECCAGGR_initConfig,
  "SDL_PDMA1_PDMA_AM64_MAIN1_ECCAGGR"
  },
  //20
  {
      &ECC_Test_SDL_DMSC0_DMSC_LITE_initConfig,
      "SDL_DMSC0_DMSC_LITE"
  },
  //21
  {
      &ECC_Test_SDL_MSRAM_256K1_MSRAM32KX64E_ECC_AGGR_initConfig,
  "SDL_MSRAM_256K1_MSRAM32KX64E_ECC_AGGR"
  },
  //22
  {
      &ECC_Test_SDL_MSRAM_256K0_MSRAM32KX64E_ECC_AGGR_initConfig,
      "SDL_MSRAM_256K0_MSRAM32KX64E_ECC_AGGR"
  },
  //23
  {
      &ECC_Test_SDL_MSRAM_256K3_MSRAM32KX64E_ECC_AGGR_initConfig,
      "SDL_MSRAM_256K3_MSRAM32KX64E_ECC_AGGR"
  },
  //24
  {
      &ECC_Test_SDL_MSRAM_256K5_MSRAM32KX64E_ECC_AGGR_initConfig,
      "SDL_MSRAM_256K5_MSRAM32KX64E_ECC_AGGR"
  },
  //25
  {
      &ECC_Test_SDL_MSRAM_256K4_MSRAM32KX64E_ECC_AGGR_initConfig,
      "SDL_MSRAM_256K4_MSRAM32KX64E_ECC_AGGR"
  },
  //26
  {
      &ECC_Test_SDL_MSRAM_256K7_MSRAM32KX64E_ECC_AGGR_initConfig,
      "SDL_MSRAM_256K7_MSRAM32KX64E_ECC_AGGR"
  },
  //27
  {
      &ECC_Test_SDL_MSRAM_256K6_MSRAM32KX64E_ECC_AGGR_initConfig,
      "SDL_MSRAM_256K6_MSRAM32KX64E_ECC_AGGR"
  },
  //28
  {
      &ECC_Test_SDL_MCU_M4FSS0_BLAZAR_ECC_initConfig,
      "SDL_MCU_M4FSS0_BLAZAR_ECC"
  },
  //29
  {
      &ECC_Test_SDL_PDMA0_PDMA_AM64_MAIN0_ECCAGGR_initConfig,
      "SDL_PDMA0_PDMA_AM64_MAIN0_ECCAGGR"
  },
  //30
  {
      &ECC_Test_SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_RXMEM_initConfig,
      "SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_RXMEM"
  },
  //31
  {
      &ECC_Test_SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_TXMEM_initConfig,
      "SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_TXMEM"
  },

  //32
  {
      &ECC_Test_SDL_VTM0_K3VTM_N16FFC_ECCAGGR_initConfig,
  "SDL_VTM0_K3VTM_N16FFC_ECCAGGR"
  },
  //33
  {
      &ECC_Test_SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_initConfig,
      "SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR"
  },
  //34
  {
      &ECC_Test_SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_initConfig,
      "SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR"
  },
  //35
  {
      &ECC_Test_SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_initConfig,
      "SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR"
  },
  //36
  {
      &ECC_Test_SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_initConfig,
      "SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR"
  },
  //37
  {
      &ECC_Test_SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0_initConfig,
      "SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE0"
  },
  //38
  {
      &ECC_Test_SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_COREPAC_initConfig,
      "SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR"
  },
  //39
  {
      &ECC_Test_SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1_initConfig,
      "SDL_COMPUTE_CLUSTER0_SAM64_A53_256KB_WRAP_A53_DUAL_WRAP_CBA_WRAP_A53_DUAL_WRAP_CBA_COREPAC_ECC_AGGR_CORE1"
  },
};
#endif

#if defined(SOC_AM243X)
static SDL_Test_EccConfig ECC_Test_config[SDL_ECC_MEMTYPE_MAX] =
{
  //0
  {
      &ECC_Test_SDL_PSRAMECC0_PSRAM256X32E_ECC_AGGR_initConfig,
      "SDL_PSRAMECC0_PSRAM256X32E_ECC_AGGR"
  },
  //1
  {
      &ECC_Test_SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_RXMEM_initConfig,
  "SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_RXMEM"
  },

  //3
  {
      &ECC_Test_SDL_ADC0_ADC12_CORE_FIFO_RAM_ECC_AGGR_initConfig,
  "SDL_ADC0_ADC12_CORE_FIFO_RAM_ECC_AGGR"
  },
  //3
  {
      &ECC_Test_SDL_ECC_AGGR1_initConfig,
      "SDL_ECC_AGGR1"
  },
  //4
  {
      &ECC_Test_SDL_ECC_AGGR0_initConfig,
      "SDL_ECC_AGGR0"
  },
  //5
  {
      &ECC_Test_SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR_initConfig,
  "SDL_SA2_UL0_SA2_UL_SA2_UL_ECC_AGGR"
  },
  //6
  {
      &ECC_Test_SDL_MCAN0_MCANSS_MSGMEM_WRAP_ECC_AGGR_initConfig,
      "SDL_MCAN0_MCANSS_MSGMEM_WRAP_ECC_AGGR"
  },
  //7
  {
      &ECC_Test_SDL_DMASS0_DMSS_AM64_ECCAGGR_initConfig,
  "SDL_DMASS0_DMSS_AM64_ECCAGGR"
  },
  //8
  {
      &ECC_Test_SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_TXMEM_initConfig,
  "SDL_MMCSD1_EMMCSD4SS_ECC_AGGR_TXMEM"
  },
  //9
  {
      &ECC_Test_SDL_MCAN1_MCANSS_MSGMEM_WRAP_ECC_AGGR_initConfig,
      "SDL_MCAN1_MCANSS_MSGMEM_WRAP_ECC_AGGR"
  },
  //10
  {
      &ECC_Test_SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR_initConfig,
  "SDL_PRU_ICSSG1_ICSS_G_16FF_CORE_BORG_ECC_AGGR"
  },
  //11
  {
      &ECC_Test_SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR_initConfig,
  "SDL_PRU_ICSSG0_ICSS_G_16FF_CORE_BORG_ECC_AGGR"
  },
  //12
  {
      &ECC_Test_SDL_MSRAM_256K2_MSRAM32KX64E_ECC_AGGR_initConfig,
  "SDL_MSRAM_256K2_MSRAM32KX64E_ECC_AGGR"
  },
  //13
  {
      &ECC_Test_SDL_FSS0_FSS_UL_OSPI0_OSPI_WRAP_ECC_AGGR_initConfig,
  "SDL_FSS0_FSS_UL_OSPI0_OSPI_WRAP_ECC_AGGR"
  },
  //14
  {
      &ECC_Test_SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR_initConfig,
  "ECC_Test_SDL_CPSW0_CPSW_3GUSS_CORE_ECC_CPSW_ECC_AGGR"
  },
  //15
  {
      &ECC_Test_SDL_GICSS0_GIC500SS_1_2_ECC_AGGR_initConfig,
  "SDL_GICSS0_GIC500SS_1_2_ECC_AGGR"
  },
  //16
  {
      &ECC_Test_SDL_PCIE0_PCIE_G2X1_64_CORE_AXI_ECC_AGGR_initConfig,
  "SDL_PCIE0_PCIE_G2X1_64_CORE_AXI_ECC_AGGR"
  },
  //17
  {
      &ECC_Test_SDL_PCIE0_PCIE_G2X1_64_CORE_CORE_ECC_AGGR_initConfig,
  "SDL_PCIE0_PCIE_G2X1_64_CORE_CORE_ECC_AGGR"
  },
  //18
  {
      &ECC_Test_SDL_USB0_USB3P0SS64_16FFC_USB3P0SS64_CORE_A_ECC_AGGR_initConfig,
  "SDL_USB0_USB3P0SS64_16FFC_USB3P0SS64_CORE_A_ECC_AGGR"
  },
  //19
  {
      &ECC_Test_SDL_PDMA1_PDMA_AM64_MAIN1_ECCAGGR_initConfig,
  "SDL_PDMA1_PDMA_AM64_MAIN1_ECCAGGR"
  },
  //20
  {
      &ECC_Test_SDL_DMSC0_DMSC_LITE_initConfig,
      "SDL_DMSC0_DMSC_LITE"
  },
  //21
  {
      &ECC_Test_SDL_MSRAM_256K1_MSRAM32KX64E_ECC_AGGR_initConfig,
  "SDL_MSRAM_256K1_MSRAM32KX64E_ECC_AGGR"
  },
  //22
  {
      &ECC_Test_SDL_MSRAM_256K0_MSRAM32KX64E_ECC_AGGR_initConfig,
      "SDL_MSRAM_256K0_MSRAM32KX64E_ECC_AGGR"
  },
  //23
  {
      &ECC_Test_SDL_MSRAM_256K3_MSRAM32KX64E_ECC_AGGR_initConfig,
      "SDL_MSRAM_256K3_MSRAM32KX64E_ECC_AGGR"
  },
  //24
  {
      &ECC_Test_SDL_MSRAM_256K5_MSRAM32KX64E_ECC_AGGR_initConfig,
      "SDL_MSRAM_256K5_MSRAM32KX64E_ECC_AGGR"
  },
  //25
  {
      &ECC_Test_SDL_MSRAM_256K4_MSRAM32KX64E_ECC_AGGR_initConfig,
      "SDL_MSRAM_256K4_MSRAM32KX64E_ECC_AGGR"
  },
  //26
  {
      &ECC_Test_SDL_MSRAM_256K7_MSRAM32KX64E_ECC_AGGR_initConfig,
      "SDL_MSRAM_256K7_MSRAM32KX64E_ECC_AGGR"
  },
  //27
  {
      &ECC_Test_SDL_MSRAM_256K6_MSRAM32KX64E_ECC_AGGR_initConfig,
      "SDL_MSRAM_256K6_MSRAM32KX64E_ECC_AGGR"
  },
  //28
  {
      &ECC_Test_SDL_MCU_M4FSS0_BLAZAR_ECC_initConfig,
      "SDL_MCU_M4FSS0_BLAZAR_ECC"
  },
  //29
  {
      &ECC_Test_SDL_PDMA0_PDMA_AM64_MAIN0_ECCAGGR_initConfig,
      "SDL_PDMA0_PDMA_AM64_MAIN0_ECCAGGR"
  },
  //30
  {
      &ECC_Test_SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_RXMEM_initConfig,
      "SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_RXMEM"
  },
  //31
  {
      &ECC_Test_SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_TXMEM_initConfig,
      "SDL_MMCSD0_EMMC8SS_16FFC_ECC_AGGR_TXMEM"
  },

  //32
  {
      &ECC_Test_SDL_VTM0_K3VTM_N16FFC_ECCAGGR_initConfig,
  "SDL_VTM0_K3VTM_N16FFC_ECCAGGR"
  },
  //33
  {
      &ECC_Test_SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR_initConfig,
      "SDL_R5FSS1_PULSAR_LITE_CPU0_ECC_AGGR"
  },
  //34
  {
      &ECC_Test_SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR_initConfig,
      "SDL_R5FSS1_PULSAR_LITE_CPU1_ECC_AGGR"
  },
  //35
  {
      &ECC_Test_SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR_initConfig,
      "SDL_R5FSS0_PULSAR_LITE_CPU0_ECC_AGGR"
  },
  //36
  {
      &ECC_Test_SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR_initConfig,
      "SDL_R5FSS0_PULSAR_LITE_CPU1_ECC_AGGR"
  },
};
#endif
