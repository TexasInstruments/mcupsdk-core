/*
 *  Copyright (C) 2021 Texas Instruments Incorporated
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *    Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the
 *    distribution.
 *
 *    Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Auto generated file 
 */

#include "ti_board_open_close.h"

% let cpuName = system.getScript('/common').getSelfSysCfgCoreName();
int32_t Board_driversOpen(void)
{
    int32_t status = SystemP_SUCCESS;
% if(cpuName.match(/a53/)) {

    if(0 == Armv8_getCoreId())
    {

% }
% for(let subTemplate of args) {
    % if (subTemplate.board_open) {
`system.getTemplate(subTemplate.board_open)()`
    % }
% }
% if(cpuName.match(/a53/)) {

    }

% }
    return status;
}

void Board_driversClose(void)
{
% if(cpuName.match(/a53/)) {

    if(0 == Armv8_getCoreId())
    {

% }
% for(let subTemplate of args) {
    % if (subTemplate.board_close) {
`system.getTemplate(subTemplate.board_close)()`
    % }
% }
% if(cpuName.match(/a53/)) {

    }

% }
}

% for(let subTemplate of args) {
    % if (subTemplate.board_open_close_config) {
`system.getTemplate(subTemplate.board_open_close_config)()`
    % }
% }
