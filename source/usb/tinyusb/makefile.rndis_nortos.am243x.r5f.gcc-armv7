#
# Auto generated makefile
#

export MCU_PLUS_SDK_PATH?=$(abspath ../../..)
include $(MCU_PLUS_SDK_PATH)/imports.mak

CG_TOOL_ROOT=$(CGT_GCC_ARMV7_PATH)

CC=$(CGT_GCC_ARMV7_PATH)/bin/arm-none-eabi-gcc
AR=$(CGT_GCC_ARMV7_PATH)/bin/arm-none-eabi-gcc-ar

PROFILE?=release
ConfigName:=$(PROFILE)

LIBNAME:=usbd_tusb_rndis_nortos.am243x.r5f.gcc-armv7.$(PROFILE).lib

FILES_common := \
    usb_wrapper.c \
    dcd.c \
    tusb.c \
    tusb_fifo.c \
    usbd.c \
    usbd_control.c \
    ecm_rndis_device.c \
    rndis_reports.c \
    dhserver.c \
    dnserver.c \
    altcp.c \
    altcp_alloc.c \
    altcp_tcp.c \
    def.c \
    dns.c \
    inet_chksum.c \
    init.c \
    ip.c \
    mem.c \
    memp.c \
    netif.c \
    pbuf.c \
    raw.c \
    stats.c \
    sys.c \
    tcp.c \
    tcp_in.c \
    tcp_out.c \
    timeouts.c \
    udp.c \
    autoip.c \
    dhcp.c \
    etharp.c \
    icmp.c \
    igmp.c \
    ip4.c \
    ip4_addr.c \
    ip4_frag.c \
    ethernet.c \
    slipif.c \
    httpd.c \
    lwiperf.c \
    fs.c \
    err.c \

FILES_PATH_common = \
    ../tinyusb/tinyusb-stack/src \
    ../tinyusb/tinyusb-stack/lib/networking \
    ../tinyusb/tinyusb-stack/src/common \
    ../tinyusb/tinyusb-stack/src/device \
    ../tinyusb/tinyusb-stack/src/class/net \
    ../tinyusb/portable/am64x_am243x \
    ../cdn/include \
    ../cdn/soc/am64x_am243x \
    ../../networking/lwip/lwip-stack/src/core \
    ../../networking/lwip/lwip-stack/src/api \
    ../../networking/lwip/lwip-stack/src/core/ipv4 \
    ../../networking/lwip/lwip-stack/src/netif \
    ../../networking/lwip/lwip-stack/src/apps/http/ \
    ../../networking/lwip/lwip-stack/src/apps/lwiperf/ \

INCLUDES_common := \
    -I${CG_TOOL_ROOT}/arm-none-eabi/include \
    -I${MCU_PLUS_SDK_PATH}/source \
    -I../../drivers/hw_include \
    -I../../drivers/hw_include/am64x_am243x \
    -I../../drivers/soc/am64x_am243x \
    -I../tinyusb/config/nortos/am64x_am243x \
    -I../tinyusb/tinyusb-stack/src \
    -I../tinyusb/tinyusb-stack/src/common \
    -I../tinyusb/tinyusb-stack/src/device \
    -I../tinyusb/tinyusb-stack/src/class/net \
    -I../tinyusb/tinyusb-stack/lib/networking \
    -I../tinyusb/config/nortos/am64x_am243x/rndis_config \
    -I../cdn/core_driver/common/src \
    -I../cdn/core_driver/common/include \
    -I../cdn/core_driver/device/src \
    -I../cdn/core_driver/device/include \
    -I../cdn/include \
    -I../cdn/soc/am64x_am243x \
    -I../../networking/lwip/lwip-stack/src/include \
    -I../../networking/lwip/lwip-stack/src/include/ipv4 \
    -I../../networking/lwip/lwip-stack/src/include/lwip/apps \
    -I../../networking/lwip/lwip-stack/src/include/lwip \
    -I../../networking/lwip/lwip-config/am243x/usb/ \
    -I../../networking/lwip/lwip-port/include/ \

DEFINES_common := \
    -DSOC_AM243X \

DEFINES_debug := \

DEFINES_release := \

CFLAGS_common := \
    -mcpu=cortex-r5 \
    -mfloat-abi=hard \
    -mfpu=vfpv3-d16 \
    -Wall \
    -mthumb \
    -Werror \
    -g \
    -Wno-unused-function \
    -Wno-enum-compare \
    -Wno-uninitialized \
    -Wno-int-to-pointer-cast \
    -fgnu89-inline \
    -Wno-pointer-to-int-cast \
    -Wno-unused-variable \
    -Wno-unused-but-set-variable \
    -fdata-sections \
    -ffunction-sections \

CFLAGS_debug := \
    -D_DEBUG_=1 \

CFLAGS_release := \
    -O2 \

ARFLAGS_common := \
    cr \

FILES := $(FILES_common) $(FILES_$(PROFILE))
ASMFILES := $(ASMFILES_common) $(ASMFILES_$(PROFILE))
FILES_PATH := $(FILES_PATH_common) $(FILES_PATH_$(PROFILE))
CFLAGS := $(CFLAGS_common) $(CFLAGS_$(PROFILE))
ASMFLAGS := $(CFLAGS_common) $(CFLAGS_$(PROFILE))
DEFINES := $(DEFINES_common) $(DEFINES_$(PROFILE))
INCLUDES := $(INCLUDES_common) $(INCLUDE_$(PROFILE))
ARFLAGS := $(ARFLAGS_common) $(ARFLAGS_$(PROFILE))

LIBDIR := lib
OBJDIR := obj/am243x/gcc-armv7/$(PROFILE)/r5f/usbd_tusb_rndis_nortos/
OBJS := $(FILES:%.c=%.obj)
OBJS += $(ASMFILES:%.S=%.obj)
DEPS := $(FILES:%.c=%.d)

vpath %.obj $(OBJDIR)
vpath %.c $(FILES_PATH)
vpath %.S $(FILES_PATH)

$(OBJDIR)/%.obj %.obj: %.c
	@echo  Compiling: $(LIBNAME): $<
	$(CC) -c $(CFLAGS) $(INCLUDES) $(DEFINES) -MMD -MT $@ -o $(OBJDIR)/$@ $<

$(OBJDIR)/%.obj %.obj: %.S
	@echo  Compiling: $(LIBNAME): $<
	$(CC) -c -x assembler-with-cpp $(CFLAGS) $(INCLUDES) $(DEFINES) -o $(OBJDIR)$@ $<

all: $(LIBDIR)/$(LIBNAME)

$(LIBDIR)/$(LIBNAME): $(OBJS) | $(LIBDIR)
	@echo  .
	@echo  Archiving: $(LIBNAME) to $@ ...
	$(AR) $(ARFLAGS) $@ $(addprefix $(OBJDIR), $(OBJS))
	@echo  Archiving: $(LIBNAME) Done !!!
	@echo  .

clean:
	@echo  Cleaning: $(LIBNAME) ...
	$(RMDIR) $(OBJDIR)
	$(RM) $(LIBDIR)/$(LIBNAME)

scrub:
	@echo  Scrubing: $(LIBNAME) ...
	-$(RMDIR) obj/
	-$(RMDIR) lib/

$(OBJS): | $(OBJDIR)

$(LIBDIR) $(OBJDIR):
	$(MKDIR) $@

-include $(addprefix $(OBJDIR)/, $(DEPS))
