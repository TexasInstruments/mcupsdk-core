#
# Auto generated makefile
#

export MCU_PLUS_SDK_PATH?=$(abspath ../..)
include $(MCU_PLUS_SDK_PATH)/imports.mak

CG_TOOL_ROOT=$(CGT_TI_C6000_PATH)

CC=$(CGT_TI_C6000_PATH)/bin/cl6x
AR=$(CGT_TI_C6000_PATH)/bin/ar6x

PROFILE?=release
ConfigName:=$(PROFILE)

LIBNAME:=drivers.awr294x.c66.ti-c6000.$(PROFILE).lib

FILES_common := \
    adcbuf.c \
    cbuff.c \
    cbuff_lvds.c \
    cbuff_transfer.c \
    cbuff_edma.c \
    crc.c \
    csirx.c \
    csirx_soc.c \
    edma.c \
    esm_v0.c \
    gpio_v1.c \
    hsmclient.c \
    hsmclient_utils.c \
    hwa.c \
    i2c_v1.c \
    ipc_notify_v1.c \
    ipc_notify_v1_cfg.c \
    ipc_rpmsg.c \
    ipc_rpmsg_vring.c \
    mailbox.c \
    mailbox_cfg.c \
    mcan.c \
    pinmux.c \
    rti.c \
    sipc_notify_src.c \
    sipc_notify_cfg.c \
    soc.c \
    soc_rcm.c \
    uart_sci.c \
    uart_sci_edma.c \
    watchdog_rti.c \
    watchdog_soc.c \

FILES_PATH_common = \
    bootloader \
    bootloader/soc/awr294x \
    adcbuf/v0 \
    cbuff/v0 \
    crc/v1 \
    csirx/v0 \
    csirx/v0/soc/awr294x \
    edma/v0 \
    epwm/v2 \
    esm/v0 \
    gpadc/v0 \
    gpadc/v0/soc/awr294x \
    gpio/v1 \
    hsmclient \
    hsmclient/soc/awr294x \
    hsmclient/utils \
    hwa/v0 \
    i2c/v1 \
    ipc_notify/v1 \
    ipc_notify/v1/soc/awr294x \
    ipc_rpmsg \
    mailbox/v0 \
    mailbox/v0/soc/awr294x \
    mcan/v0 \
    mibspi/v0 \
    mibspi/v0/edma \
    mibspi/v0/soc/awr294x \
    pinmux/awr294x \
    qspi/v0 \
    qspi/v0/lld \
    qspi/v0/lld/edma \
    rti/v0 \
    secure_ipc_notify/ \
    secure_ipc_notify/soc/awr294x \
    secure_ipc_notify/soc/ \
    soc/awr294x \
    uart/v1 \
    watchdog/v0 \
    watchdog/v0/soc/awr294x \

INCLUDES_common := \
    -I${CG_TOOL_ROOT}/include \
    -I${MCU_PLUS_SDK_PATH}/source \

DEFINES_common := \
    -DSOC_AWR294X \

CFLAGS_common := \
    -mv6600 \
    --c99 \
    -q \
    -mo \
    -pden \
    --emit_warnings_as_errors \
    --mem_model:const=data \
    --mem_model:data=far_aggregates \
    --remove_hooks_when_inlining \
    -on2 \
    --disable_push_pop \
    --fp_mode=relaxed \
    --assume_control_regs_read \

CFLAGS_debug := \
    -D_DEBUG_=1 \

CFLAGS_release := \
    --program_level_compile \
    -o3 \
    -mf2 \

ARFLAGS_common := \
    rq \

FILES := $(FILES_common) $(FILES_$(PROFILE))
ASMFILES := $(ASMFILES_common) $(ASMFILES_$(PROFILE))
ASMEXTNFILES := $(ASMEXTNFILES_common) $(ASMEXTNFILES_$(PROFILE))
FILES_PATH := $(FILES_PATH_common) $(FILES_PATH_$(PROFILE))
CFLAGS := $(CFLAGS_common) $(CFLAGS_$(PROFILE))
ASMFLAGS := $(CFLAGS_common) $(CFLAGS_$(PROFILE))
ifeq ($(CPLUSPLUS_BUILD), yes)
CFLAGS += $(CFLAGS_cpp_common)
endif
DEFINES := $(DEFINES_common) $(DEFINES_$(PROFILE))
INCLUDES := $(INCLUDES_common) $(INCLUDE_$(PROFILE))
ARFLAGS := $(ARFLAGS_common) $(ARFLAGS_$(PROFILE))

LIBDIR := lib
OBJDIR := obj/awr294x/ti-c6000/$(PROFILE)/c66/drivers/
OBJS := $(FILES:%.c=%.obj)
OBJS += $(ASMFILES:%.S=%.obj)
OBJS += $(ASMEXTNFILES:%.asm=%.obj)
DEPS := $(FILES:%.c=%.d)

vpath %.obj $(OBJDIR)
vpath %.c $(FILES_PATH)
vpath %.S $(FILES_PATH)
vpath %.asm $(FILES_PATH)

$(OBJDIR)/%.obj %.obj: %.c
	@echo  Compiling: $(LIBNAME): $<
	$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) -ppd=$(OBJDIR)/$(basename $@).d -ppa -fr=$(OBJDIR)/ -fc=$<

$(OBJDIR)/%.obj %.obj: %.S
	@echo  Compiling: $(LIBNAME): $<
	$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) -ppd=$(OBJDIR)/$(basename $@).d -ppa -fr=$(OBJDIR)/ -fa=$<

$(OBJDIR)/%.obj %.obj: %.asm
	@echo  Compiling: $(LIBNAME): $<
	$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) -ppd=$(OBJDIR)/$(basename $@).d -ppa -fr=$(OBJDIR)/ -fa=$<

all: $(LIBDIR)/$(LIBNAME)

$(LIBDIR)/$(LIBNAME): $(OBJS) | $(LIBDIR)
	@echo  .
	@echo  Archiving: $(LIBNAME) to $@ ...
	$(AR) $(ARFLAGS) $@ $(addprefix $(OBJDIR), $(OBJS))
	@echo  Archiving: $(LIBNAME) Done !!!
	@echo  .

clean:
	@echo  Cleaning: $(LIBNAME) ...
	$(RMDIR) $(OBJDIR)
	$(RM) $(LIBDIR)/$(LIBNAME)

scrub:
	@echo  Scrubing: $(LIBNAME) ...
	-$(RMDIR) obj/
	-$(RMDIR) lib/

$(OBJS): | $(OBJDIR)

$(LIBDIR) $(OBJDIR):
	$(MKDIR) $@

-include $(addprefix $(OBJDIR)/, $(DEPS))
