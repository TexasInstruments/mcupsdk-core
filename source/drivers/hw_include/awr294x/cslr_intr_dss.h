/********************************************************************
*
* DSS INTR Map Header file
*
* Copyright (C) 2020 Texas Instruments Incorporated.
*
*  Redistribution and use in source and binary forms, with or without
*  modification, are permitted provided that the following conditions
*  are met:
*
*    Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
*
*    Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the
*    distribution.
*
*    Neither the name of Texas Instruments Incorporated nor the names of
*    its contributors may be used to endorse or promote products derived
*    from this software without specific prior written permission.
*
*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
*  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
*  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
*  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
*  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
*  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
*  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
*  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
*  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
*/
#ifndef CSLR_INTR_DSS_H_
#define CSLR_INTR_DSS_H_

#ifdef __cplusplus
extern "C"
{
#endif

/* List of intr sources common for c66x core */
#include <drivers/hw_include/cslr_intr_c66x.h>

/* List of intr sources for receiver: DSS */
//#define CSL_DSS_INTR_DSS_ESM_HI                          NMI        /* ESM High Priority Interrupt */
#define CSL_DSS_INTR_DSP_PD_TRIGGER_WAKUP                16         /* Genreated on Write from DSS_RCM::DSP_PD_TRIGGER_WAKUP */
#define CSL_DSS_INTR_RESERVED17                          17         /* RESERVED */
#define CSL_DSS_INTR_DSS_TPCC_A_INTAGG                   18         /* DSS_TPCC_A Aggregated Functional Interrupt */
#define CSL_DSS_INTR_DSS_TPCC_A_ERRAGG                   19         /* DSS_TPCC_A Agregated Error Interrupt */
#define CSL_DSS_INTR_DSS_TPCC_B_INTAGG                   20         /* DSS_TPCC_B_Aggregated Functional Interrupt */
#define CSL_DSS_INTR_DSS_TPCC_B_ERRAGG                   21         /* DSS_TPCC_B Agregated Error Interrupt */
#define CSL_DSS_INTR_DSS_TPCC_C_INTAGG                   22         /* DSS_TPCC_C Aggregated Functional Interrupt */
#define CSL_DSS_INTR_DSS_TPCC_C_ERRAGG                   23         /* DSS_TPCC_C Agregated Error Interrupt */
#define CSL_DSS_INTR_DSS_PERIPH_ACCESS_ERRAGG            24         /* Aggregation of access-errros from DSS peripherals. */
#define CSL_DSS_INTR_TOP_MDO_INFRA_INT                   25         /* TOP MDO INFRA Interrupt */
#define CSL_DSS_INTR_RESERVED26                          26         /* RESERVED */
#define CSL_DSS_INTR_DSS_DSP_PBIST_CTRL_DONE             27         /* DSS DSP PBIST Controller Done Interrupt */
#define CSL_DSS_INTR_DSS_SW_INT0                         28         /* SW interrupt generated by writing 0x1 to register  DSS_CTRL.DSS_SW_INT[0] */
#define CSL_DSS_INTR_DSS_SW_INT1                         29         /* SW interrupt generated by writing 0x1 to register  DSS_CTRL.DSS_SW_INT[1] */
#define CSL_DSS_INTR_DSS_SW_INT2                         30         /* SW interrupt generated by writing 0x1 to register  DSS_CTRL.DSS_SW_INT[2] */
#define CSL_DSS_INTR_DSS_SW_INT3                         31         /* SW interrupt generated by writing 0x1 to register  DSS_CTRL.DSS_SW_INT[3] */
#define CSL_DSS_INTR_DSS_ESM_LO                          32         /* ESM Low Priority Interrupt */
#define CSL_DSS_INTR_DSS_ESM_HI                          33         /* ESM High Priority Interrupt */
#define CSL_DSS_INTR_DSS_MCRC_INT                        34         /* DSS MCRC Interrupt */
#define CSL_DSS_INTR_DSS_DSP_STC_DONE                    35         /* DSS DSP STC Done Interrupt */
#define CSL_DSS_INTR_DSS_DSP_PBIST_DONE                  36         /* DSS DSP PBIST Done Interrupt */
#define CSL_DSS_INTR_DSS_SCIA_INT0                       37         /* DSS SCIA Interrupt 0 */
#define CSL_DSS_INTR_DSS_SCIA_INT1                       38         /* DSS SCIA Interrupt 1 */
#define CSL_DSS_INTR_RESERVED39                          39         /* RESERVED */
#define CSL_DSS_INTR_RSS_ADC_CAPTURE_COMPLETE            40         /* Raw ADC capture complete interrupt from DFE-DSP bridge */
#define CSL_DSS_INTR_DSS_CBUFF_INT                       41         /* DSS CBUFF Interrupt */
#define CSL_DSS_INTR_DSS_CBUFF_INT_ERR                   42         /* DSSCBUFF Error Interrupt  */
#define CSL_DSS_INTR_DSS_HWA_LOOP_INTR1                  43         /* DSS_HWA Loop complete interrupt 1 */
#define CSL_DSS_INTR_DSS_HWA_PARAM_DONE_INTR1            44         /* DSS_HWA  Param done interrupt 1 */
#define CSL_DSS_INTR_RESERVED45                          45         /* RESERVED */
#define CSL_DSS_INTR_RESERVED46                          46         /* RESERVED */
#define CSL_DSS_INTR_RESERVED47                          47         /* RESERVED */
#define CSL_DSS_INTR_DFE_FRAME_START_TO_DSS              48         /* Frame start interrupt from BSS which is masked with "BSS_GPCFG:: DSS_FS_INTR_MASK" register */
#define CSL_DSS_INTR_RSS_TPCC_A_INTAGG                   49         /* RSS_TPCC_A Aggregated Functional Interrupt */
#define CSL_DSS_INTR_RSS_TPCC_A_ERRAGG                   50         /* RSS_TPCC_A Aggregated Error Interrupt */
#define CSL_DSS_INTR_ADC_VALID_FALL_EDGE                 51         /* Interrupt is trigger during Falling edge of ADC valid */
#define CSL_DSS_INTR_DFE_FRAME_START_TO_MSS              52         /* Frame start interrupt from BSS which is masked with "BSS_GPCFG:: MSS_FS_INTR_MASK" register */
#define CSL_DSS_INTR_DFE_CHIRP_CYCLE_START               53         /* Chirp cycle start interrupt from dfe */
#define CSL_DSS_INTR_DFE_CHIRP_CYCLE_END                 54         /* Chirp cycle end interrupt from dfe */
#define CSL_DSS_INTR_DFE_END_OF_FRAME                    55         /* End of Frame interrupt from Dfe */
#define CSL_DSS_INTR_RSS_FRC_FRAME_START                 56         /* Frame start interrupt from FRC  */
#define CSL_DSS_INTR_RSS_ADC_CAPTURE_COMPLETE_DITH       57         /* ADC capture complete interrupt from DFE-DSP bridge after dithering  */
#define CSL_DSS_INTR_DSS_HWA_LOOP_INTR2                  58         /* DSS_HWA Loop complete interrupt 2 */
#define CSL_DSS_INTR_DSS_HWA_PARAM_DONE_INTR2            59         /* DSS_HWA  Param done interrupt 2 */
#define CSL_DSS_INTR_DSS_WDT_TB_INT                      60         /* DSS WDT Time Base Interrupt */
#define CSL_DSS_INTR_DSS_HWA_LOCAL_RAM_ERR               61         /* DSS HWA Local RAM access error */
#define CSL_DSS_INTR_DSS_DCCA_INT                        62         /* DSS DCCA Interrupt */
#define CSL_DSS_INTR_DSS_DCCB_INT                        63         /* DSS DCCB Interrupt */
#define CSL_DSS_INTR_DSS_RTIA_OVERFLOW_0                 64         /* DSS_RTIA Overflow 0 */
#define CSL_DSS_INTR_DSS_RTIA_OVERFLOW_1                 65         /* DSS_RTIA Overflow 1 */
#define CSL_DSS_INTR_DSS_RTIA_0                          66         /* DSS_RTIA Interrupt 0 */
#define CSL_DSS_INTR_DSS_RTIA_1                          67         /* DSS_RTIA Interrupt 1 */
#define CSL_DSS_INTR_DSS_RTIA_2                          68         /* DSS_RTIA Interrupt 2 */
#define CSL_DSS_INTR_DSS_RTIA_3                          69         /* DSS_RTIA Interrupt 3 */
#define CSL_DSS_INTR_DSS_RTIB_OVERFLOW_0                 70         /* DSS_RTIB Overflow 0 */
#define CSL_DSS_INTR_DSS_RTIB_OVERFLOW_1                 71         /* DSS_RTIB Overflow 1 */
#define CSL_DSS_INTR_DSS_RTIB_0                          72         /* DSS_RTIB Interrupt 0 */
#define CSL_DSS_INTR_DSS_RTIB_1                          73         /* DSS_RTIB Interrupt 1 */
#define CSL_DSS_INTR_DSS_RTIB_2                          74         /* DSS_RTIB Interrupt 2 */
#define CSL_DSS_INTR_DSS_RTIB_3                          75         /* DSS_RTIB Interrupt 3 */
#define CSL_DSS_INTR_DSS_WDT_OVERFLOW_0                  76         /* DSS_WDT Overflow 0 */
#define CSL_DSS_INTR_DSS_WDT_OVERFLOW_1                  77         /* DSS_WDT Overflow 1 */
#define CSL_DSS_INTR_DSS_WDT_0                           78         /* DSS_WDT Interrupt 0 */
#define CSL_DSS_INTR_DSS_WDT_1                           79         /* DSS_WDT Interrupt 1 */
#define CSL_DSS_INTR_DSS_WDT_2                           80         /* DSS_WDT Interrupt 2 */
#define CSL_DSS_INTR_DSS_WDT_3                           81         /* DSS_WDT Interrupt 3 */
#define CSL_DSS_INTR_RSS_CSI2A_INT                       82         /* RSS CSI2A Interrupt  */
#define CSL_DSS_INTR_RSS_CSI2A_EOL_INT                   83         /* RSS CSI2A End of Line Interrupt  */
#define CSL_DSS_INTR_RSS_CSI2A_SOF_INT0                  84         /* RSS CSI2A Start of Frame Interrupt 0 */
#define CSL_DSS_INTR_RSS_CSI2A_SOF_INT1                  85         /* RSS CSI2A Start of Frame Interrupt 1 */
#define CSL_DSS_INTR_DSS_SW_INT_RSS_PROC_CTRL0           86         /* Interrupt from RSS_PROC_CTRL */
#define CSL_DSS_INTR_DSS_SW_INT_RSS_PROC_CTRL1           87         /* Interrupt from RSS_PROC_CTRL */
#define CSL_DSS_INTR_DSS_SW_INT_RSS_PROC_CTRL2           88         /* Interrupt from RSS_PROC_CTRL */
#define CSL_DSS_INTR_DSS_SW_INT_RSS_PROC_CTRL3           89         /* Interrupt from RSS_PROC_CTRL */
#define CSL_DSS_INTR_RSS_DATA_CAPTURE_ENABLE_FALL        90         /* Interrupt is triggered data_capute enable fall from DFE-DSP bridge (toggles after completion of every chirp) */
#define CSL_DSS_INTR_RSS_CSI2A_EOF_INT                   91         /* RSS CSI2A End of Frame Interrupt */
#define CSL_DSS_INTR_RSS_CSI2A_EOL_CNTX0_INT             92         /* RSS_CSI2A End of Line Interrupt for Context 0 */
#define CSL_DSS_INTR_RSS_CSI2A_EOL_CNTX1_INT             93         /* RSS_CSI2A End of Line Interrupt for Context 1 */
#define CSL_DSS_INTR_DSS_DSP_MBOX_READ_REQ               94         /* DSS DSP Mailbox Read Request */
#define CSL_DSS_INTR_DSS_DSP_MBOX_READ_ACK               95         /* DSS DSP Mailbox Read Acknowledge */

#ifdef __cplusplus
}
#endif
#endif /* CSLR_INTR_DSS_H_*/
