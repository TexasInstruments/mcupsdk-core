#
# Auto generated makefile
#

export MCU_PLUS_SDK_PATH?=$(abspath ../..)
include $(MCU_PLUS_SDK_PATH)/imports.mak

CG_TOOL_ROOT=$(CGT_TI_ARM_CLANG_PATH)

CC=$(CGT_TI_ARM_CLANG_PATH)/bin/tiarmclang
AR=$(CGT_TI_ARM_CLANG_PATH)/bin/tiarmar

PROFILE?=release
ConfigName:=$(PROFILE)

DEVICE_TYPE?=GP
LIBNAME:=drivers.am243x.m4f.ti-arm-clang.$(PROFILE).lib

FILES_common := \
    adc.c \
    crc.c \
    csl_sec_proxy.c \
    ecap.c \
    epwm.c \
    eqep.c \
    fsi_rx.c \
    fsi_tx.c \
    gpio.c \
    gtc.c \
    i2c_v0.c \
    i2c_v0_lld.c \
    ipc_notify_v0.c \
    ipc_notify_v0_cfg.c \
    ipc_rpmsg.c \
    ipc_rpmsg_vring.c \
    mcan.c \
    mcspi_v0.c \
    mcspi_v0_lld.c \
    mcspi_dma_dummy.c \
    ospi_v0.c \
    pinmux.c \
    spinlock.c \
    sciclient.c \
    sciclient_pm.c \
    sciclient_rm.c \
    sciclient_rm_irq.c \
    sciclient_procboot.c \
    sciclient_firewall.c \
    sciclient_irq_rm.c \
    sciclient_fmwSecureProxyMap.c \
    sciclient_boardcfg.c \
    sciclient_soc_priv.c \
    soc.c \
    uart_v0.c \
    uart_v0_lld.c \
    uart_dma_dummy.c \
    watchdog_rti.c \
    watchdog_soc.c \

FILES_PATH_common = \
    adc/v0 \
    bootloader \
    bootloader/soc/am64x_am243x \
    crc/v0 \
    ddr/v0 \
    ddr/v0/cdn_drv/ \
    ddr/v0/cdn_drv/priv \
    ddr/v0/cdn_drv/include \
    ddr/v0/cdn_drv/include/16bit \
    ddr/v0/cdn_drv/include/32bit \
    ddr/v0/cdn_drv/include/common \
    ddr/v0/cdn_drv/src \
    ddr/v0/soc/am64x_am243x \
    epwm/v0 \
    ecap/v0 \
    eqep/v0 \
    esm/v1 \
    elm/v0 \
    firewall/v0 \
    fsi/v0 \
    gpio/v0 \
    gpmc/v0 \
    gpmc/v0/dma \
    gpmc/v0/dma/udma \
    gtc/v0 \
    hw_include/ringacc/V0/priv \
    hw_include/serdes_cd/V1 \
    hw_include/serdes_cd/V1/V1_1 \
    i2c/v0 \
    i2c/v0/lld \
    ipc_notify/v0 \
    ipc_notify/v0/soc/am243x \
    ipc_rpmsg/ \
    mcan/v0 \
    mcspi/v0 \
    mcspi/v0/lld \
    mcspi/v0/lld/dma \
    mcspi/v0/lld/dma/udma \
    mcspi/v0/lld/dma/dummy \
    mdio/v0 \
    mmcsd/v0 \
    ospi \
    ospi/v0 \
    ospi/v0/dma \
    ospi/v0/dma/udma \
    pcie \
    pcie/v0 \
    pcie/v0/soc/am64x_am243x \
    pinmux/am64x_am243x \
    pruicss/g_v0 \
    pruicss/soc/am64x_am243x \
    sciclient \
    sciclient/soc/am64x_am243x \
    soc/am64x_am243x \
    spinlock/v0 \
    timer_mgr/v0/priv \
    uart/v0 \
    uart/v0/lld \
    uart/v0/lld/dma \
    uart/v0/lld/dma/udma \
    uart/v0/lld/dma/dummy \
    udma/v0 \
    udma/hw_include \
    udma/soc \
    udma/soc/am64x_am243x \
    watchdog/v1 \
    watchdog/v1/soc/am64x_am243x \

INCLUDES_common := \
    -I${CG_TOOL_ROOT}/include/c \
    -I${MCU_PLUS_SDK_PATH}/source \

DEFINES_common := \
    -DSOC_AM243X \

# Remove later with combined boot
ifeq ($(DEVICE_TYPE),$(filter $(DEVICE_TYPE), HS))
DEFINES_common += -DBUILD_HS
endif

CFLAGS_common := \
    -mcpu=cortex-m4 \
    -mfloat-abi=hard \
    -mthumb \
    -Wall \
    -Werror \
    -g \
    -Wno-gnu-variable-sized-type-not-at-end \
    -Wno-unused-function \

CFLAGS_cpp_common := \
    -Wno-c99-designator \
    -Wno-extern-c-compat \
    -Wno-c++11-narrowing \
    -Wno-reorder-init-list \
    -Wno-deprecated-register \
    -Wno-writable-strings \
    -Wno-enum-compare \
    -Wno-reserved-user-defined-literal \
    -Wno-unused-const-variable \
    -x c++ \

CFLAGS_debug := \
    -D_DEBUG_=1 \

CFLAGS_release := \
    -Os \

ARFLAGS_common := \
    rc \

FILES := $(FILES_common) $(FILES_$(PROFILE))
ASMFILES := $(ASMFILES_common) $(ASMFILES_$(PROFILE))
FILES_PATH := $(FILES_PATH_common) $(FILES_PATH_$(PROFILE))
CFLAGS := $(CFLAGS_common) $(CFLAGS_$(PROFILE))
ASMFLAGS := $(CFLAGS_common) $(CFLAGS_$(PROFILE))
ifeq ($(INSTRUMENTATION_MODE), yes)
CFLAGS += -fprofile-instr-generate -fcoverage-mapping
endif
ifeq ($(CPLUSPLUS_BUILD), yes)
CFLAGS += $(CFLAGS_cpp_common)
endif
DEFINES := $(DEFINES_common) $(DEFINES_$(PROFILE))
INCLUDES := $(INCLUDES_common) $(INCLUDE_$(PROFILE))
ARFLAGS := $(ARFLAGS_common) $(ARFLAGS_$(PROFILE))

LIBDIR := lib
OBJDIR := obj/am243x/ti-arm-clang/$(PROFILE)/m4f/drivers/
OBJS := $(FILES:%.c=%.obj)
OBJS += $(ASMFILES:%.S=%.obj)
DEPS := $(FILES:%.c=%.d)

vpath %.obj $(OBJDIR)
vpath %.c $(FILES_PATH)
vpath %.S $(FILES_PATH)

$(OBJDIR)/%.obj %.obj: %.c
	@echo  Compiling: $(LIBNAME): $<
	$(CC) -c $(CFLAGS) $(INCLUDES) $(DEFINES) -MMD -o $(OBJDIR)/$@ $<

$(OBJDIR)/%.obj %.obj: %.S
	@echo  Compiling: $(LIBNAME): $<
	$(CC) -c $(ASMFLAGS) -o $(OBJDIR)/$@ $<

all: $(LIBDIR)/$(LIBNAME)

$(LIBDIR)/$(LIBNAME): $(OBJS) | $(LIBDIR)
	@echo  .
	@echo  Archiving: $(LIBNAME) to $@ ...
	$(AR) $(ARFLAGS) $@ $(addprefix $(OBJDIR), $(OBJS))
	@echo  Archiving: $(LIBNAME) Done !!!
	@echo  .

clean:
	@echo  Cleaning: $(LIBNAME) ...
	$(RMDIR) $(OBJDIR)
	$(RM) $(LIBDIR)/$(LIBNAME)

scrub:
	@echo  Scrubing: $(LIBNAME) ...
	-$(RMDIR) obj/
	-$(RMDIR) lib/

$(OBJS): | $(OBJDIR)

$(LIBDIR) $(OBJDIR):
	$(MKDIR) $@

-include $(addprefix $(OBJDIR)/, $(DEPS))
