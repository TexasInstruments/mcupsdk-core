%%{
    let module = system.modules['/drivers/uart/uart'];
    let common = system.getScript("/common");
    let edmaModule = system.modules['/drivers/edma/edma'];
    let uartEdmaInstances = [];
    for(let i=0; i < module.$instances.length; i++) {
        let instance = module.$instances[i];
        if(instance.intrEnable == "DMA") {
            uartEdmaInstances.push(module.getInstanceConfig(instance).edmaDriver);
        }
    }
%%}
/*
 * UART
 */

/* UART atrributes */
static UART_Attrs gUartAttrs[CONFIG_UART_NUM_INSTANCES] =
{
% for(let i = 0; i < module.$instances.length; i++) {
    % let instance = module.$instances[i];
    % let config = module.getInstanceConfig(instance);
    % let name = config.name.replace('USART', 'UART');
    {
        .baseAddr           = `config.baseAddr`,
        .inputClkFreq       = `config.inputClkFreq`U,
    },
% }
};
/* UART objects - initialized by the driver */
static UART_Object gUartObjects[CONFIG_UART_NUM_INSTANCES];
/* UART driver configuration */
UART_Config gUartConfig[CONFIG_UART_NUM_INSTANCES] =
{
% for(let i = 0; i < module.$instances.length; i++) {
    % let instance = module.$instances[i];
    {
        &gUartAttrs[`instance.$name.toUpperCase()`],
        &gUartObjects[`instance.$name.toUpperCase()`],
    },
% }
};

uint32_t gUartConfigNum = CONFIG_UART_NUM_INSTANCES;

#include <drivers/uart/v0/lld/dma/uart_dma.h>
#include <drivers/edma.h>
%if(uartEdmaInstances.length > 0) {
#include <drivers/uart/v0/lld/dma/edma/uart_dma_edma.h>
extern UART_EdmaChConfig gUartEdmaChConfig[];
UART_DmaConfig gUartDmaConfig[CONFIG_UART_NUM_DMA_INSTANCES] =
{
% for(let i = 0; i < edmaModule.$instances.length; i++) {
    {
        .fxns        = NULL,
        .uartDmaArgs = (void *)&gUartEdmaChConfig[`i`],
    },
%}
};

UART_DmaHandle gUartDmaHandle[CONFIG_UART_NUM_INSTANCES] =
{
% for(let i = 0; i < module.$instances.length; i++) {
    % let instance = module.$instances[i];
    %if(instance.intrEnable == "DMA") {
        (void *)&gEdmaConfig[CONFIG_EDMA0],
    % }
    %else {
        NULL,
    %}
% }
};
%}
% else {
uint32_t gEdmaConfigNum = CONFIG_UART_NUM_DMA_INSTANCES;
UART_DmaHandle gUartDmaHandle[] =
{
};
EDMA_Config gEdmaConfig[] =
{
};
%}

uint32_t gUartDmaConfigNum = CONFIG_UART_NUM_DMA_INSTANCES;

void Drivers_uartInit(void)
{
    UART_init();
}
