%%{
    let module = system.modules[args[0]];
%%}
/*
 * GPIO
 */
#include <drivers/gpio.h>
#include <kernel/dpl/AddrTranslateP.h>

/* GPIO PIN Macros */
% for(let i = 0; i < module.$instances.length; i++) {
    % let instance = module.$instances[i];
    % let config = module.getInstanceConfig(instance);
% if (!config.baseAddr.includes("undefined")){
#define `instance.$name.toUpperCase()`_BASE_ADDR (`config.baseAddr`)
%}
% if (!config.pinIndex.includes("INVALID")){
#define `instance.$name.toUpperCase()`_PIN (`config.pinIndex`)
%}
#define `instance.$name.toUpperCase()`_DIR (GPIO_DIRECTION_`config.pinDir`)
#define `instance.$name.toUpperCase()`_TRIG_TYPE (GPIO_TRIG_TYPE_`config.trigType`)
% if(config.enableIntr){
#define `instance.$name.toUpperCase()`_INTR_NUM     (CSLR_`config.coreId`_INTR_MAIN_GPIOMUX_INTROUTER0_OUTP_`config.intrOut`)
% }
% }
#define CONFIG_GPIO_NUM_INSTANCES (`module.$instances.length`U)
