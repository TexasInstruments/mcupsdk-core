%%{
    let module = system.modules["/networking/enet_cpsw/enet_cpsw"];
    let common = system.getScript("/common");
    let soc = system.getScript(`/networking/soc/networking_${common.getSocName()}`);
    let driverVer = soc.getDriverVer("enet_cpsw");
    const netifScript = system.getScript(`/networking/enet_cpsw/${driverVer}/enet_cpsw_lwipif_netif`);
%%}
% let instance = module.$instances[0];
% let instances = module.$instances;

/* ========================================================================== */
/*                         Macros & Typedefs                                  */
/* ========================================================================== */

/* ENET Pheriphel instance indexes. Name of ENET PHERIPHERAL can be changed in example syscfg */
/* Application should use the defines below when opening a ENET Driver */
% for (var i = 0; i < instances.length; i++) {
#define `instances[i].$name.toUpperCase()`       (`i`U)
% }
#define ENET_SYSCFG_MAX_ENET_INSTANCES           (`instances.length`U)

#define ENET_SYSCFG_TOTAL_NUM_TX_PKT      (`Number(module.getTxPacketsCount(instance))`U)
#define ENET_SYSCFG_TOTAL_NUM_RX_PKT      (`Number(module.getRxPacketsCount(instance))`U)
#define ENET_SYSCFG_PKT_POOL_ENABLE       (`Number(instance.PktPoolEnable)`U)
#define ENET_SYSCFG_PKT_INFO_ONLY_ENABLE  (`Number(instance.PktInfoOnlyEnable)`U)
#define ENET_SYSCFG_MAX_MAC_PORTS         (`Number((module.getCpswInstInfo(instance)).numMacPorts)`U)
#define ENET_SYSCFG_ENABLE_EXTPHY         (`Number((instance.ExternalPhyMgmtEnable == true))`U)
#define ENET_SYSCFG_ENABLE_MDIO_MANUALMODE   (`Number(instance.mdioMode === "MDIO_MODE_MANUAL")`U)
#define ENET_SYSCFG_RX_FLOWS_NUM          (`Number(module.getRxChannelCount(instance))`U)
#define ENET_SYSCFG_TX_CHANNELS_NUM       (`Number(module.getTxChannelCount(instance))`U)
#define ENET_SYSCFG_RING_MON_NUM          (3U) /*Not appicable for LCDMA devices*/
/* TX DMA Channel indexes. Name of TX DMA channel can be changed in example syscfg */
/* Application should use the define below when opening a Tx DMA channel */
% for(let i = 0; i < module.getTxChannelCount(instance); i++) {
#define `module.getChannelConfig(instance, "TX", i).$name.toUpperCase()`          (`i`U)
% }

/* RX DMA Channel indexes. Name of RX DMA channel can be changed in example syscfg */
/* Application should use the define below when opening a Rx DMA channel */
% for(let i = 0; i < module.getRxChannelCount(instance); i++) {
#define `module.getChannelConfig(instance, "RX", i).$name.toUpperCase()`          (`i`U)
% }

/* TX DMA max num packets allocated to the DMA channel */
/* Application should use the define below when opening a Tx DMA channel */
% for(let i = 0; i < module.getTxChannelCount(instance); i++) {
#define `module.getChannelConfig(instance, "TX", i).$name.toUpperCase()`_NUM_PKTS          (`Number(module.getChannelConfig(instance, "TX", i).PacketsCount)`U)
% }

/* RX DMA DMA max num packets allocated to the DMA channel  */
/* Application should use the define below when opening a Rx DMA channel */
% for(let i = 0; i < module.getRxChannelCount(instance); i++) {
#define `module.getChannelConfig(instance, "RX", i).$name.toUpperCase()`_NUM_PKTS          (`Number(module.getChannelConfig(instance, "RX", i).PacketsCount)`U)
% }


/* NETIF indexes. Name of NETIF can be changed in example syscfg */
/* Application should use the define below when opening a NETIF */
% var idx = 0;
% for (let inst in instances) {
% for (let i = 0; i < module.getNetifCount(instances[inst]); i++) {
#define `module.getNetifConfig(instances[inst], i).$name.toUpperCase()`          (`idx`U)
% idx++;
% }
% }
#define ENET_SYSCFG_NETIF_COUNT                    (`netifScript.getTotalNetIfCount(instances)`U)
#define ENET_SYSCFG_DEFAULT_NETIF_IDX              (`netifScript.getDefaultNetifIndex()`)
/*
 * Packet sizes for different pools. LARGE_POOL is largest packet size pool with MEDIUM_POOL
 * second largest and SMALL_POOL smallest
 */
#define ENET_MEM_LARGE_POOL_PKT_SIZE        ENET_UTILS_ALIGN(`Number(instance.LargePoolPktSize)`U, ENET_UTILS_CACHELINE_SIZE)
#define ENET_MEM_MEDIUM_POOL_PKT_SIZE       ENET_UTILS_ALIGN(`Number(instance.MediumPoolPktSize)`U, ENET_UTILS_CACHELINE_SIZE)
#define ENET_MEM_SMALL_POOL_PKT_SIZE        ENET_UTILS_ALIGN(`Number(instance.SmallPoolPktSize)`U, ENET_UTILS_CACHELINE_SIZE)
