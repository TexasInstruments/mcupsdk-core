
export MCU_PLUS_SDK_PATH?=$(abspath ../../..)
include $(MCU_PLUS_SDK_PATH)/imports.mak

CG_TOOL_ROOT=$(CGT_TI_C6000_PATH)

CC=$(CGT_TI_C6000_PATH)/bin/cl6x
AR=$(CGT_TI_C6000_PATH)/bin/ar6x

PROFILE?=release
ConfigName:=$(PROFILE)

LIBNAME:=safertos.awr294x.c66.ti-c6000.$(PROFILE).lib

FILES_common := \
    AddrTranslateP_null.c \
    CacheP_c66.c \
    CycleCounterP_c66.c \
    DebugP_shmLogWriter.c \
    DebugP_shmLogReader.c \
    DebugP_uartLogWriter.c \
    DebugP_uartScanf.c \
    DebugP_memTraceLogWriter.c \
    DebugP_log.c \
    HeapP_internal.c \
    HwiP_c66.c \
    printf.c \
    TimerP_rti.c \
    QueueP_nortos.c \
    ClockP_safertos.c \
    ClockP_safertos_c66.c \
    DebugP_safertos.c \
    DebugP_shmLogReader_safertos.c \
    HeapP_safertos.c \
    HwiP_c66_handlers_safertos.c \
    SemaphoreP_safertos.c \
    TaskP_safertos.c \
    EventP_safertos.c \
    list.c \
    eventgroups.c \
    task.c \
    queue.c \
    evtmplx.c \
    timers.c \
    semaphore.c \
    mutex.c \
    streambuffer.c \
    portable.c \
    apiSemaphoreWrapper.c \
    apiEvtMplxWrapper.c \
    apiTimersWrapper.c \
    apiMutexWrapper.c \
    apiStreamBufferWrapper.c \
    apiWrapper.c \
    apiEventGroupsWrapper.c \

ASMFILES_common := \
    HwiP_c66_safertos_asm.S \

ASMEXTNFILES_common := \
    portasm.asm \

FILES_PATH_common = \
    ../nortos/dpl/c66 \
    ../nortos/dpl/common \
    dpl/c66 \
    dpl/common \
    safeRTOS/kernel \
    safeRTOS/portable/201_C66x \
    safeRTOS/portable/201_C66x/005_TI_CGT \
    safeRTOS/api/PrivWrapperStd \

INCLUDES_common := \
    -I${CG_TOOL_ROOT}/include \
    -I${MCU_PLUS_SDK_PATH}/source \
    -IsafeRTOS/api/201_C66x \
    -IsafeRTOS/api/PrivWrapperStd \
    -IsafeRTOS/portable/201_C66x \
    -IsafeRTOS/portable/201_C66x/005_TI_CGT \
    -IsafeRTOS/kernel/include_api \
    -IsafeRTOS/kernel/include_prv \
    -IsafeRTOS/config \

DEFINES_common := \
    -DSOC_AWR294X \
    -DOS_SAFERTOS \

CFLAGS_common := \
    -mv6600 \
    --c99 \
    -q \
    -mo \
    -pden \
    --emit_warnings_as_errors \
    --mem_model:const=data \
    --mem_model:data=far_aggregates \
    --remove_hooks_when_inlining \
    -on2 \
    --disable_push_pop \
    --fp_mode=relaxed \
    --assume_control_regs_read \
    --strip_coff_underscore \

CFLAGS_debug := \
    -D_DEBUG_=1 \

CFLAGS_release := \
    --program_level_compile \
    -o3 \
    -mf2 \

ARFLAGS_common := \
    rq \

FILES := $(FILES_common) $(FILES_$(PROFILE))
ASMFILES := $(ASMFILES_common) $(ASMFILES_$(PROFILE))
ASMEXTNFILES := $(ASMEXTNFILES_common) $(ASMEXTNFILES_$(PROFILE))
FILES_PATH := $(FILES_PATH_common) $(FILES_PATH_$(PROFILE))
CFLAGS := $(CFLAGS_common) $(CFLAGS_$(PROFILE))
ASMFLAGS := $(CFLAGS_common) $(CFLAGS_$(PROFILE))
ifeq ($(CPLUSPLUS_BUILD), yes)
CFLAGS += $(CFLAGS_cpp_common)
endif
DEFINES := $(DEFINES_common) $(DEFINES_$(PROFILE))
INCLUDES := $(INCLUDES_common) $(INCLUDE_$(PROFILE))
ARFLAGS := $(ARFLAGS_common) $(ARFLAGS_$(PROFILE))

LIBDIR := lib
OBJDIR := obj/awr294x/ti-c6000/$(PROFILE)/c66/safertos/
OBJS := $(FILES:%.c=%.obj)
OBJS += $(ASMFILES:%.S=%.obj)
OBJS += $(ASMEXTNFILES:%.asm=%.obj)
DEPS := $(FILES:%.c=%.d)

vpath %.obj $(OBJDIR)
vpath %.c $(FILES_PATH)
vpath %.S $(FILES_PATH)
vpath %.asm $(FILES_PATH)

$(OBJDIR)/%.obj %.obj: %.c
	@echo  Compiling: $(LIBNAME): $<
	$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) -ppd=$(OBJDIR)/$(basename $@).d -ppa -fr=$(OBJDIR)/ -fc=$<

$(OBJDIR)/%.obj %.obj: %.S
	@echo  Compiling: $(LIBNAME): $<
	$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) -ppd=$(OBJDIR)/$(basename $@).d -ppa -fr=$(OBJDIR)/ -fa=$<

$(OBJDIR)/%.obj %.obj: %.asm
	@echo  Compiling: $(LIBNAME): $<
	$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) -ppd=$(OBJDIR)/$(basename $@).d -ppa -fr=$(OBJDIR)/ -fa=$<

all: $(LIBDIR)/$(LIBNAME)

$(LIBDIR)/$(LIBNAME): $(OBJS) | $(LIBDIR)
	@echo  .
	@echo  Archiving: $(LIBNAME) to $@ ...
	$(AR) $(ARFLAGS) $@ $(addprefix $(OBJDIR), $(OBJS))
	@echo  Archiving: $(LIBNAME) Done !!!
	@echo  .

clean:
	@echo  Cleaning: $(LIBNAME) ...
	$(RMDIR) $(OBJDIR)
	$(RM) $(LIBDIR)/$(LIBNAME)

scrub:
	@echo  Scrubing: $(LIBNAME) ...
	-$(RMDIR) obj/
	-$(RMDIR) lib/

$(OBJS): | $(OBJDIR)

$(LIBDIR) $(OBJDIR):
	$(MKDIR) $@

-include $(addprefix $(OBJDIR)/, $(DEPS))
