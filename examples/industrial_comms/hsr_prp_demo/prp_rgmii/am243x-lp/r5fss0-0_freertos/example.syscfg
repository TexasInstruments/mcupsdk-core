/**
 * These arguments were used when this file was generated. They will be automatically applied on subsequent loads
 * via the GUI or CLI. Run CLI with '--help' for additional information on how to override these arguments.
 * @cliArgs --device "AM243x_ALX_beta" --package "ALX" --part "ALX" --context "r5fss0-0" --product "MCU_PLUS_SDK@07.03.01"
 * @versions {"tool":"1.13.0+2553"}
 */

/**
 * Import the modules used in this configuration.
 */
const eeprom     = scripting.addModule("/board/eeprom/eeprom", {}, false);
const eeprom1    = eeprom.addInstance();
const led        = scripting.addModule("/board/led/led", {}, false);
const led1       = led.addInstance();
const led2       = led.addInstance();
const led3       = led.addInstance();
const gpio       = scripting.addModule("/drivers/gpio/gpio", {}, false);
const gpio1      = gpio.addInstance();
const gpio2      = gpio.addInstance();
const i2c        = scripting.addModule("/drivers/i2c/i2c", {}, false);
const i2c1       = i2c.addInstance();
const pruicss    = scripting.addModule("/drivers/pruicss/pruicss", {}, false);
const pruicss1   = pruicss.addInstance();
const hsr_prp    = scripting.addModule("/industrial_comms/hsr_prp/hsr_prp", {}, false);
const hsr_prp1   = hsr_prp.addInstance();
const debug_log  = scripting.addModule("/kernel/dpl/debug_log");
const mpu_armv7  = scripting.addModule("/kernel/dpl/mpu_armv7", {}, false);
const mpu_armv71 = mpu_armv7.addInstance();
const mpu_armv72 = mpu_armv7.addInstance();
const mpu_armv73 = mpu_armv7.addInstance();
const mpu_armv74 = mpu_armv7.addInstance();
const mpu_armv75 = mpu_armv7.addInstance();
const mpu_armv76 = mpu_armv7.addInstance();

/**
 * Write custom configuration values to the imported modules.
 */
eeprom1.$name = "CONFIG_EEPROM0";

led1.$name = "CONFIG_LED0";

led2.$name = "CONFIG_LED1";

led3.$name = "CONFIG_LED2";
led3.name  = "TPIC2810";

gpio1.$name                = "CONFIG_GPIO0";
led1.peripheralDriver      = gpio1;
gpio1.pinDir               = "OUTPUT";
gpio1.GPIO.$assign         = "GPIO0";
gpio1.GPIO.gpioPin.$assign = "ball.U19";

gpio2.$name                = "CONFIG_GPIO1";
led2.peripheralDriver      = gpio2;
gpio2.GPIO.$assign         = "GPIO1";
gpio2.GPIO.gpioPin.$assign = "ball.A9";

led3.peripheralDriver    = i2c1;
i2c1.$name               = "CONFIG_I2C0";
eeprom1.peripheralDriver = i2c1;
i2c1.I2C.$assign         = "I2C0";

hsr_prp1.$name                         = "CONFIG_HSR_PRP0";
hsr_prp1.phyToMacInterfaceMode         = "RGMII";
hsr_prp1.phyAddr0                      = 3;
hsr_prp1.phyAddr1                      = 15;
hsr_prp1.icss_emac[0].$name            = "CONFIG_ICSS_EMAC0";
hsr_prp1.icss_emac[0].mode             = scripting.forceWrite("SWITCH");
hsr_prp1.icss_emac[0].queue            = "QUEUE2";
hsr_prp1.icss_emac[0].linkTaskPriority = 12;
hsr_prp1.icss_emac[0].rxTaskPriority   = 6;
hsr_prp1.icss_emac[0].txTaskPriority   = 10;
hsr_prp1.icss_emac[0].splitQueue       = true;
hsr_prp1.ethphy1[0].$name              = "CONFIG_ETHPHY0";
hsr_prp1.ethphy2[0].$name              = "CONFIG_ETHPHY1";

pruicss1.coreClk = scripting.forceWrite(200000000);
pruicss1.iepClk  = scripting.forceWrite(200000000);
hsr_prp1.icss    = pruicss1;
pruicss1.$name   = "CONFIG_PRU_ICSS1";

debug_log.enableUartLog        = true;
debug_log.enableCssLog         = false;
debug_log.uartLog.$name        = "CONFIG_UART_CONSOLE";
debug_log.uartLog.UART.$assign = "USART0";

mpu_armv71.$name             = "CONFIG_MPU_REGION0";
mpu_armv71.size              = 31;
mpu_armv71.attributes        = "Device";
mpu_armv71.accessPermissions = "Supervisor RD+WR, User RD";
mpu_armv71.allowExecute      = false;

mpu_armv72.$name             = "CONFIG_MPU_REGION1";
mpu_armv72.size              = 15;
mpu_armv72.accessPermissions = "Supervisor RD+WR, User RD";

mpu_armv73.$name             = "CONFIG_MPU_REGION2";
mpu_armv73.baseAddr          = 0x41010000;
mpu_armv73.size              = 15;
mpu_armv73.accessPermissions = "Supervisor RD+WR, User RD";

mpu_armv74.$name             = "CONFIG_MPU_REGION3";
mpu_armv74.accessPermissions = "Supervisor RD+WR, User RD";
mpu_armv74.baseAddr          = 0x70000000;
mpu_armv74.size              = 21;

mpu_armv75.$name             = "CONFIG_MPU_REGION4";
mpu_armv75.accessPermissions = "Supervisor RD, User RD";
mpu_armv75.baseAddr          = 0x60000000;
mpu_armv75.size              = 28;

mpu_armv76.$name      = "CONFIG_MPU_REGION5";
mpu_armv76.attributes = "Cached+Sharable";
mpu_armv76.baseAddr   = 0x70000000;
mpu_armv76.size       = 16;

/**
 * Pinmux solution for unlocked pins/peripherals. This ensures that minor changes to the automatic solver in a future
 * version of the tool will not impact the pinmux you originally saw.  These lines can be completely deleted in order to
 * re-solve from scratch.
 */
i2c1.I2C.SCL.$suggestSolution                             = "ball.B16";
i2c1.I2C.SDA.$suggestSolution                             = "ball.B15";
hsr_prp1.PRU_ICSSG1_MDIO.$suggestSolution                 = "PRU_ICSSG1_MDIO0";
hsr_prp1.PRU_ICSSG1_MDIO.MDC.$suggestSolution             = "ball.W1";
hsr_prp1.PRU_ICSSG1_MDIO.MDIO.$suggestSolution            = "ball.V2";
hsr_prp1.PRU_ICSSG1_IEP.$suggestSolution                  = "PRU_ICSSG1_IEP0";
hsr_prp1.PRU_ICSSG1_IEP.EDC_LATCH_IN0.$suggestSolution    = "ball.Y4";
hsr_prp1.PRU_ICSSG1_IEP.EDC_SYNC_OUT0.$suggestSolution    = "ball.U3";
hsr_prp1.PRU_ICSSG1_MII_G_RT.$suggestSolution             = "PRU_ICSSG1_MII_G_RT";
hsr_prp1.PRU_ICSSG1_MII_G_RT.MII0_RXLINK.$suggestSolution = "ball.Y13";
hsr_prp1.PRU_ICSSG1_MII_G_RT.MII1_RXLINK.$suggestSolution = "ball.W11";
hsr_prp1.PRU_ICSSG1_RGMII1.$suggestSolution               = "PRU_ICSSG1_RGMII2";
hsr_prp1.PRU_ICSSG1_RGMII1.RD0.$suggestSolution           = "ball.AA10";
hsr_prp1.PRU_ICSSG1_RGMII1.RD1.$suggestSolution           = "ball.Y10";
hsr_prp1.PRU_ICSSG1_RGMII1.RD2.$suggestSolution           = "ball.Y11";
hsr_prp1.PRU_ICSSG1_RGMII1.RD3.$suggestSolution           = "ball.V12";
hsr_prp1.PRU_ICSSG1_RGMII1.RXC.$suggestSolution           = "ball.V10";
hsr_prp1.PRU_ICSSG1_RGMII1.RX_CTL.$suggestSolution        = "ball.Y12";
hsr_prp1.PRU_ICSSG1_RGMII1.TD0.$suggestSolution           = "ball.Y6";
hsr_prp1.PRU_ICSSG1_RGMII1.TD1.$suggestSolution           = "ball.AA8";
hsr_prp1.PRU_ICSSG1_RGMII1.TD2.$suggestSolution           = "ball.Y9";
hsr_prp1.PRU_ICSSG1_RGMII1.TD3.$suggestSolution           = "ball.W9";
hsr_prp1.PRU_ICSSG1_RGMII1.TXC.$suggestSolution           = "ball.Y8";
hsr_prp1.PRU_ICSSG1_RGMII1.TX_CTL.$suggestSolution        = "ball.V9";
hsr_prp1.PRU_ICSSG1_RGMII2.$suggestSolution               = "PRU_ICSSG1_RGMII1";
hsr_prp1.PRU_ICSSG1_RGMII2.RD0.$suggestSolution           = "ball.V4";
hsr_prp1.PRU_ICSSG1_RGMII2.RD1.$suggestSolution           = "ball.W5";
hsr_prp1.PRU_ICSSG1_RGMII2.RD2.$suggestSolution           = "ball.AA4";
hsr_prp1.PRU_ICSSG1_RGMII2.RD3.$suggestSolution           = "ball.Y5";
hsr_prp1.PRU_ICSSG1_RGMII2.RXC.$suggestSolution           = "ball.Y2";
hsr_prp1.PRU_ICSSG1_RGMII2.RX_CTL.$suggestSolution        = "ball.AA5";
hsr_prp1.PRU_ICSSG1_RGMII2.TD0.$suggestSolution           = "ball.V5";
hsr_prp1.PRU_ICSSG1_RGMII2.TD1.$suggestSolution           = "ball.W2";
hsr_prp1.PRU_ICSSG1_RGMII2.TD2.$suggestSolution           = "ball.V6";
hsr_prp1.PRU_ICSSG1_RGMII2.TD3.$suggestSolution           = "ball.AA7";
hsr_prp1.PRU_ICSSG1_RGMII2.TXC.$suggestSolution           = "ball.W6";
hsr_prp1.PRU_ICSSG1_RGMII2.TX_CTL.$suggestSolution        = "ball.Y7";
debug_log.uartLog.UART.RXD.$suggestSolution               = "ball.B10";
debug_log.uartLog.UART.TXD.$suggestSolution               = "ball.B11";
