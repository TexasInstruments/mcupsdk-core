#-----------------------------------------------------------------------------#
#                                                                             #
#      DEFAULT CONFIGURATION FILE TO BE USED WITH THE FLASHWRITER SCRIPT      #
#                                                                             #
#-----------------------------------------------------------------------------#
#
# By default this config file,
# - points to pre-built flash writer, bootloader for this EVM
# - The application image points to relative path of the ipc rpmsg linux application image for this EVM
#   - Make sure this application is built before running this script
# - You can customized this config file to point to your own bootloader and/or application images
# - You can use --operation=flashverify-emmc if you just want to verify the flash contents and not flash the file.
#

# First point to sbl_uart_uniflash binary, which function's as a server to flash one or more files to eMMC
--flash-writer=sbl_prebuilt/am64x-evm/sbl_uart_uniflash.release.tiimage

# Now send one or more files to flash or flashverify as needed. The order of sending files does not matter

# When sending bootloader make sure to flash at offset 0x0. ROM expects bootloader at offset 0x0 of eMMC
--file=../../examples/drivers/boot/sbl_emmc_linux/am64x-evm/r5fss0-0_nortos/ti-arm-clang/sbl_emmc_linux.release.tiimage --operation=flash-emmc --flash-offset=0x0

# When sending application image, make sure to flash at offset 0x800000 (default) or to whatever offset your bootloader is configured for
--file=../../examples/drivers/ipc/ipc_rpmsg_echo_linux/am64x-evm/system_freertos/ipc_rpmsg_echo_linux_system.release.appimage --operation=flash-emmc --flash-offset=0x800000

# Linux image is flashed at 0xA00000 or to whatever offset your bootloader is configured for
--file=../../tools/boot/linuxAppimageGen/linux.appimage --operation=flash-emmc --flash-offset=0xA00000

